{
  "data": {
    "solutionArticle": {
      "__typename": "SolutionArticleNode",
      "author": {
        "__typename": "UserNode",
        "profile": {
          "__typename": "UserProfileNode",
          "realName": "力扣官方题解",
          "userAvatar": "https://assets.leetcode-cn.com/aliyun-lc-upload/users/leetcode-solution/avatar_1582018938.png",
          "userSlug": "leetcode-solution"
        },
        "username": "LeetCode-Solution"
      },
      "byLeetcode": true,
      "canEdit": false,
      "canEditReward": false,
      "canSee": true,
      "chargeType": "FREE",
      "content": "#### 方法一：模拟\n\n我们以步长（step）为 `2` 遍历数组 `nums`，对于当前遍历到的元素 `a` 和 `b`，我们将 `a` 个 `b` 添加进答案中即可。\n\n```C++ [sol1-C++]\nclass Solution {\npublic:\n    vector<int> decompressRLElist(vector<int>& nums) {\n        vector<int> ans;\n        for (int i = 0; i < nums.size(); i += 2) {\n            for (int j = 0; j < nums[i]; ++j) {\n                ans.push_back(nums[i + 1]);\n            }\n        }\n        return ans;\n    }\n};\n```\n\n```Python [sol1-Python3]\nclass Solution:\n    def decompressRLElist(self, nums: List[int]) -> List[int]:\n        ans = list()\n        for i in range(0, len(nums), 2):\n            ans.extend([nums[i + 1]] * nums[i])\n        return ans\n```\n\n**复杂度分析**\n\n- 时间复杂度：$O(N + \\sum \\text{nums}_{even})$，其中 $N$ 是数组 `nums` 的长度，$\\sum \\text{nums}_{even}$ 是数组 `nums` 中所有下标为偶数的元素之和。\n\n- 空间复杂度：$O(\\sum \\text{nums}_{even})$。",
      "createdAt": "2020-02-18T13:17:47.709138+00:00",
      "hitCount": 10045,
      "identifier": "1ypWUt",
      "isEditorsPick": false,
      "isMostPopular": false,
      "isMyFavorite": false,
      "next": {
        "__typename": "BriefSolutionNode",
        "slug": "3-xing-dai-ma-jian-jie-gao-xiao-by-liu-y-gxoz",
        "title": "3 行代码。。。简介高效"
      },
      "position": 1,
      "prev": null,
      "question": {
        "__typename": "QuestionNode",
        "questionTitleSlug": "decompress-run-length-encoded-list"
      },
      "reactionType": null,
      "reactionsV2": [
        {
          "__typename": "ReactionCountNode",
          "count": 5,
          "reactionType": "UPVOTE"
        },
        {
          "__typename": "ReactionCountNode",
          "count": 1,
          "reactionType": "AWESOME"
        }
      ],
      "rewardEnabled": null,
      "slug": "jie-ya-suo-bian-ma-lie-biao-by-leetcode-solution",
      "status": "PUBLISHED",
      "summary": " 方法一：模拟\n我们以步长（step）为 2 遍历数组 nums，对于当前遍历到的元素 a 和 b，我们将 a 个 b 添加进答案中即可。\n复杂度分析\n\n\n时间复杂度：O(N + \\sum \\text{nums}_{even})，其中 N 是数组 nums 的长度，\\sum \\text{nums}_{even} 是数组",
      "sunk": false,
      "tags": [
        {
          "__typename": "CommonTagNode",
          "name": "C++",
          "nameTranslated": "",
          "slug": "cpp",
          "tagType": "LANGUAGE"
        },
        {
          "__typename": "CommonTagNode",
          "name": "Python3",
          "nameTranslated": "",
          "slug": "python3",
          "tagType": "LANGUAGE"
        }
      ],
      "thumbnail": "",
      "title": "解压缩编码列表",
      "topic": {
        "__typename": "TopicNode",
        "commentCount": 16,
        "id": 101299,
        "viewCount": 9061
      },
      "uuid": "1ypWUt",
      "videosInfo": []
    }
  }
}
