{
  "data": {
    "solutionArticle": {
      "__typename": "SolutionArticleNode",
      "author": {
        "__typename": "UserNode",
        "profile": {
          "__typename": "UserProfileNode",
          "realName": "。",
          "userAvatar": "https://assets.leetcode-cn.com/aliyun-lc-upload/users/booooo_/avatar_1634021773.png",
          "userSlug": "booooo_"
        },
        "username": "Booooo_"
      },
      "byLeetcode": false,
      "canEdit": false,
      "canEditReward": false,
      "canSee": true,
      "chargeType": "FREE",
      "content": "# 解题思路\r\n\r\n移除数组 nums 最左边或最右边的元素，然后从 x 中减去该元素的值。如果可以将 x 恰好减到 0，返回最小操作数否则，返回 -1。**相当于找到一个和为 sum - x 的最长连续子数组。**利用滑动窗口来解决。\r\n\r\n**滑动窗口(双指针)**：left 指针和 right 指针，开始时均指向数组的开头。\r\n首先，求出 nums 数组的和，并得到 sum - x 的值 count，然后将 count 值与 0 比较：若 count < 0，则直接返回 -1。\r\n>示例：nums = [1, 1]，x = 3，此时计算 count = -1 < 0，若继续下面的操作会出现**数组越界的错误**(因为，遍历到数组最后一个元素时，sumNums = 2 > -1，此时 left 指针右移后指向的值仍 > -1，当 left 指针继续右移时，数组越界了)。\r\n\r\n若count >= 0，则计算当前窗口中所有元素的和 sumNums。若 sumNums > count，则将 left 指针右移一位，并且在右移之前要将 left 指针指向的元素从 sumNums 中减掉；若 sumNums == count，则记录此时窗口的长度，并保存最长的。\r\n\r\n---\r\n# 代码\r\n\r\n```\r\nclass Solution {\r\n\r\n    public int minOperations(int[] nums, int x) {\r\n\r\n        int n = nums.length;\r\n        int left = 0, right = 0;\r\n        int maxLength = -1;\r\n        int sum = 0;\r\n        \r\n        for (int i=0;i<n;i++) {\r\n\r\n            sum += nums[i];\r\n        }\r\n        int count = sum - x;\r\n        if (count < 0) {\r\n\r\n            return -1;\r\n        }\r\n        int sumNums = 0;\r\n        while (right < n) {\r\n\r\n            sumNums += nums[right];\r\n            while (sumNums > count) {\r\n\r\n                sumNums -= nums[left];\r\n                left++;\r\n            }\r\n            if (sumNums == count) {\r\n\r\n                maxLength = Math.max(maxLength, right - left + 1);\r\n            }\r\n            right++;\r\n        }\r\n        if (maxLength == -1) return -1;\r\n        else return n - maxLength;\r\n    }\r\n}\r\n```\r\n时间复杂度：O(n)\r\n空间复杂度：O(1)\r\n",
      "createdAt": "2021-02-28T06:36:53.513097+00:00",
      "hitCount": 4323,
      "identifier": "AyJNfy",
      "isEditorsPick": false,
      "isMostPopular": false,
      "isMyFavorite": false,
      "next": {
        "__typename": "BriefSolutionNode",
        "slug": "onshuang-bai-_ha-xi-qian-zhui-he-by-sunrise-z",
        "title": "O(n)双百_哈希+前缀和"
      },
      "position": 2,
      "prev": {
        "__typename": "BriefSolutionNode",
        "slug": "shi-yong-hua-dong-chuang-kou-zhao-zhong-jian-zui-c",
        "title": "使用滑动窗口找中间最长的片段使得sum(片段)=sum(nums)-x"
      },
      "question": {
        "__typename": "QuestionNode",
        "questionTitleSlug": "minimum-operations-to-reduce-x-to-zero"
      },
      "reactionType": null,
      "reactionsV2": [
        {
          "__typename": "ReactionCountNode",
          "count": 13,
          "reactionType": "UPVOTE"
        },
        {
          "__typename": "ReactionCountNode",
          "count": 1,
          "reactionType": "AWESOME"
        }
      ],
      "rewardEnabled": null,
      "slug": "jiang-x-jian-dao-0-de-zui-xiao-cao-zuo-s-tggw",
      "status": "PREPUBLISH",
      "summary": "解题思路\n移除数组 nums 最左边或最右边的元素，然后从 x 中减去该元素的值。如果可以将 x 恰好减到 0，返回最小操作数否则，返回 -1。**相当于找到一个和为 sum - x 的最长连续子数组。**利用滑动窗口来解决。\n滑动窗口(双指针)：left 指针和 right 指针，开始时均指向数组的开头。\n首先，求出",
      "sunk": false,
      "tags": [
        {
          "__typename": "CommonTagNode",
          "name": "Array",
          "nameTranslated": "数组",
          "slug": "array",
          "tagType": "TOPIC"
        },
        {
          "__typename": "CommonTagNode",
          "name": "Two Pointers",
          "nameTranslated": "双指针",
          "slug": "two-pointers",
          "tagType": "TOPIC"
        },
        {
          "__typename": "CommonTagNode",
          "name": "Java",
          "nameTranslated": "",
          "slug": "java",
          "tagType": "LANGUAGE"
        }
      ],
      "thumbnail": "",
      "title": "将 x 减到 0 的最小操作数（滑动窗口）",
      "topic": {
        "__typename": "TopicNode",
        "commentCount": 12,
        "id": 625962,
        "viewCount": 2966
      },
      "uuid": "AyJNfy",
      "videosInfo": []
    }
  }
}
