{
  "data": {
    "question": {
      "__typename": "QuestionNode",
      "book": null,
      "boundTopicId": 1060,
      "categoryTitle": "Database",
      "codeSnippets": [
        {
          "__typename": "CodeSnippetNode",
          "code": "# Write your MySQL query statement below",
          "lang": "MySQL",
          "langSlug": "mysql"
        },
        {
          "__typename": "CodeSnippetNode",
          "code": "/* Write your T-SQL query statement below */",
          "lang": "MS SQL Server",
          "langSlug": "mssql"
        },
        {
          "__typename": "CodeSnippetNode",
          "code": "/* Write your PL/SQL query statement below */",
          "lang": "Oracle",
          "langSlug": "oraclesql"
        }
      ],
      "companyTagStats": null,
      "content": "<p>Table: <code>Person</code></p>\n\n<pre>\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| personId    | int     |\n| lastName    | varchar |\n| firstName   | varchar |\n+-------------+---------+\npersonId is the primary key column for this table.\nThis table contains information about the ID of some persons and their first and last names.\n</pre>\n\n<p>&nbsp;</p>\n\n<p>Table: <code>Address</code></p>\n\n<pre>\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| addressId   | int     |\n| personId    | int     |\n| city        | varchar |\n| state       | varchar |\n+-------------+---------+\naddressId is the primary key column for this table.\nEach row of this table contains information about the city and state of one person with ID = PersonId.\n</pre>\n\n<p>&nbsp;</p>\n\n<p>Write an SQL query to report the first name, last name, city, and state of each person in the <code>Person</code> table. If the address of a <code>personId</code> is not present in the <code>Address</code> table, report <code>null</code> instead.</p>\n\n<p>Return the result table in <strong>any order</strong>.</p>\n\n<p>The query result format is in the following example.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> \nPerson table:\n+----------+----------+-----------+\n| personId | lastName | firstName |\n+----------+----------+-----------+\n| 1        | Wang     | Allen     |\n| 2        | Alice    | Bob       |\n+----------+----------+-----------+\nAddress table:\n+-----------+----------+---------------+------------+\n| addressId | personId | city          | state      |\n+-----------+----------+---------------+------------+\n| 1         | 2        | New York City | New York   |\n| 2         | 3        | Leetcode      | California |\n+-----------+----------+---------------+------------+\n<strong>Output:</strong> \n+-----------+----------+---------------+----------+\n| firstName | lastName | city          | state    |\n+-----------+----------+---------------+----------+\n| Allen     | Wang     | Null          | Null     |\n| Bob       | Alice    | New York City | New York |\n+-----------+----------+---------------+----------+\n<strong>Explanation:</strong> \nThere is no address in the address table for the personId = 1 so we return null in their city and state.\naddressId = 1 contains information about the address of personId = 2.\n</pre>\n",
      "contributors": [],
      "dailyRecordStatus": null,
      "difficulty": "Easy",
      "dislikes": 0,
      "editorType": "CKEDITOR",
      "enableRunCode": true,
      "envInfo": "{\"mysql\":[\"MySQL\",\"<p>\\u7248\\u672c\\uff1a<code>MySQL 8.0<\\/code><\\/p>\"],\"mssql\":[\"MS SQL Server\",\"<p>mssql server 2019.<\\/p>\"],\"oraclesql\":[\"Oracle\",\"<p>Oracle Sql 11.2.<\\/p>\"]}",
      "exampleTestcases": "{\"headers\":{\"Person\":[\"personId\",\"lastName\",\"firstName\"],\"Address\":[\"addressId\",\"personId\",\"city\",\"state\"]},\"rows\":{\"Person\":[[1,\"Wang\",\"Allen\"],[2,\"Alice\",\"Bob\"]],\"Address\":[[1,2,\"New York City\",\"New York\"],[2,3,\"Leetcode\",\"California\"]]}}",
      "hints": [],
      "isDailyQuestion": false,
      "isLiked": null,
      "isPaidOnly": false,
      "isSubscribed": false,
      "judgeType": "large",
      "judgerAvailable": true,
      "langToValidPlayground": "{\"cpp\": false, \"java\": false, \"python\": false, \"python3\": false, \"mysql\": false, \"mssql\": false, \"oraclesql\": false, \"c\": false, \"csharp\": false, \"javascript\": false, \"ruby\": false, \"bash\": false, \"swift\": false, \"golang\": false, \"scala\": false, \"html\": false, \"pythonml\": false, \"kotlin\": false, \"rust\": false, \"php\": false, \"typescript\": false, \"racket\": false, \"erlang\": false, \"elixir\": false}",
      "likes": 959,
      "metaData": "{\n  \"mysql\": [\n    \"Create table If Not Exists Person (personId int, firstName varchar(255), lastName varchar(255))\",\n    \"Create table If Not Exists Address (addressId int, personId int, city varchar(255), state varchar(255))\"\n  ],\n  \"mssql\": [\n    \"Create table Person (personId int, firstName varchar(255), lastName varchar(255))\",\n    \"Create table Address (addressId int, personId int, city varchar(255), state varchar(255))\"\n  ],\n  \"oraclesql\": [\n    \"Create table Person (personId int, firstName varchar(255), lastName varchar(255))\",\n    \"Create table Address (addressId int, personId int, city varchar(255), state varchar(255))\"\n  ],\n  \"database\": true\n}",
      "mysqlSchemas": [
        "Create table If Not Exists Person (personId int, firstName varchar(255), lastName varchar(255))",
        "Create table If Not Exists Address (addressId int, personId int, city varchar(255), state varchar(255))",
        "Truncate table Person",
        "insert into Person (personId, lastName, firstName) values ('1', 'Wang', 'Allen')",
        "insert into Person (personId, lastName, firstName) values ('2', 'Alice', 'Bob')",
        "Truncate table Address",
        "insert into Address (addressId, personId, city, state) values ('1', '2', 'New York City', 'New York')",
        "insert into Address (addressId, personId, city, state) values ('2', '3', 'Leetcode', 'California')"
      ],
      "questionFrontendId": "175",
      "questionId": "175",
      "sampleTestCase": "{\"headers\":{\"Person\":[\"personId\",\"lastName\",\"firstName\"],\"Address\":[\"addressId\",\"personId\",\"city\",\"state\"]},\"rows\":{\"Person\":[[1,\"Wang\",\"Allen\"],[2,\"Alice\",\"Bob\"]],\"Address\":[[1,2,\"New York City\",\"New York\"],[2,3,\"Leetcode\",\"California\"]]}}",
      "similarQuestions": "[{\"title\": \"Employee Bonus\", \"titleSlug\": \"employee-bonus\", \"difficulty\": \"Easy\", \"translatedTitle\": \"\\u5458\\u5de5\\u5956\\u91d1\"}]",
      "solution": {
        "__typename": "ArticleNode",
        "canSeeDetail": true,
        "id": "101"
      },
      "stats": "{\"totalAccepted\": \"322.4K\", \"totalSubmission\": \"437.1K\", \"totalAcceptedRaw\": 322376, \"totalSubmissionRaw\": 437083, \"acRate\": \"73.8%\"}",
      "status": null,
      "style": "LEETCODE",
      "title": "Combine Two Tables",
      "titleSlug": "combine-two-tables",
      "topicTags": [
        {
          "__typename": "TopicTagNode",
          "name": "Database",
          "slug": "database",
          "translatedName": "数据库"
        }
      ],
      "translatedContent": "<p>表1: <code>Person</code></p>\n\n<pre>+-------------+---------+\n| 列名         | 类型     |\n+-------------+---------+\n| PersonId    | int     |\n| FirstName   | varchar |\n| LastName    | varchar |\n+-------------+---------+\nPersonId 是上表主键\n</pre>\n\n<p>表2: <code>Address</code></p>\n\n<pre>+-------------+---------+\n| 列名         | 类型    |\n+-------------+---------+\n| AddressId   | int     |\n| PersonId    | int     |\n| City        | varchar |\n| State       | varchar |\n+-------------+---------+\nAddressId 是上表主键\n</pre>\n\n<p>&nbsp;</p>\n\n<p>编写一个 SQL 查询，满足条件：无论 person 是否有地址信息，都需要基于上述两表提供&nbsp;person 的以下信息：</p>\n\n<p>&nbsp;</p>\n\n<pre>FirstName, LastName, City, State\n</pre>\n",
      "translatedTitle": "组合两个表",
      "ugcQuestionId": null
    }
  }
}
