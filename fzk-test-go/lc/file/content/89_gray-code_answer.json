{
  "data": {
    "solutionArticle": {
      "__typename": "SolutionArticleNode",
      "author": {
        "__typename": "UserNode",
        "profile": {
          "__typename": "UserProfileNode",
          "realName": "Krahets",
          "userAvatar": "https://assets.leetcode-cn.com/aliyun-lc-upload/users/jyd/avatar_1589712294.png",
          "userSlug": "jyd"
        },
        "username": "jyd"
      },
      "byLeetcode": false,
      "canEdit": false,
      "canEditReward": false,
      "canSee": true,
      "chargeType": "FREE",
      "content": "#### 思路：\r\n- 设 $n$ 阶格雷码集合为 $G(n)$，则 $G(n+1)$ 阶格雷码为：\r\n    - 给 $G(n)$ 阶格雷码每个元素二进制形式前面添加 $0$，得到 $G'(n)$；\r\n    - 设 $G(n)$ 集合倒序（镜像）为 $R(n)$，给 $R(n)$ 每个元素二进制形式前面添加 $1$，得到 $R'(n)$；\r\n    - $G(n+1) = G'(n) ∪ R'(n)$ 拼接两个集合即可得到下一阶格雷码。\r\n- 根据以上规律，可从 $0$ 阶格雷码推导致任何阶格雷码。\r\n- 代码解析：\r\n    - 由于最高位前默认为 $0$，因此 $G'(n) = G(n)$，只需在 `res`(即 $G(n)$ )后添加 $R'(n)$ 即可；\r\n    - 计算 $R'(n)$：执行 `head = 1 << i` 计算出对应位数，以给 $R(n)$ 前添加 $1$ 得到对应 $R'(n)$；\r\n    - 倒序遍历 `res`(即 $G(n)$ )：依次求得 $R'(n)$ 各元素添加至 `res` 尾端，遍历完成后 `res`(即 $G(n+1)$)。\r\n\r\n#### 图解：\r\n<![Picture1.png](https://pic.leetcode-cn.com/6c8d62ea7150ece8ed135e6d29bc614eb4022d136b08f3640132fb66e40694c4-Picture1.png),![Picture2.png](https://pic.leetcode-cn.com/e3dcfa34510e7625bfa170388389b14e7fc79e21486db077aac41acf044133f8-Picture2.png),![Picture3.png](https://pic.leetcode-cn.com/d0df7e038c396acf7c5283e8080963ecefe2ab37d4b607982eb3e40b1e5ee03b-Picture3.png),![Picture4.png](https://pic.leetcode-cn.com/28acf6d5b1fae0fb2dddbedd7ac92ffeee8902cd28233bdfb08b52af411a9bb2-Picture4.png)>\r\n\r\n\r\n#### 代码：\r\n```Python []\r\nclass Solution:\r\n    def grayCode(self, n: int) -> List[int]:\r\n        res, head = [0], 1\r\n        for i in range(n):\r\n            for j in range(len(res) - 1, -1, -1):\r\n                res.append(head + res[j])\r\n            head <<= 1\r\n        return res\r\n```\r\n```Java []\r\nclass Solution {\r\n    public List<Integer> grayCode(int n) {\r\n        List<Integer> res = new ArrayList<Integer>() {{ add(0); }};\r\n        int head = 1;\r\n        for (int i = 0; i < n; i++) {\r\n            for (int j = res.size() - 1; j >= 0; j--)\r\n                res.add(head + res.get(j));\r\n            head <<= 1;\r\n        }\r\n        return res;\r\n    }\r\n}\r\n```",
      "createdAt": "2019-07-10T16:00:03.859122+00:00",
      "hitCount": 55603,
      "identifier": "jQzEah",
      "isEditorsPick": true,
      "isMostPopular": true,
      "isMyFavorite": false,
      "next": {
        "__typename": "BriefSolutionNode",
        "slug": "zhao-gui-lu-xiang-fang-fa-by-cheungq-6-awyc",
        "title": "找规律想方法，找到对称关系"
      },
      "position": 1,
      "prev": null,
      "question": {
        "__typename": "QuestionNode",
        "questionTitleSlug": "gray-code"
      },
      "reactionType": null,
      "reactionsV2": [
        {
          "__typename": "ReactionCountNode",
          "count": 355,
          "reactionType": "UPVOTE"
        },
        {
          "__typename": "ReactionCountNode",
          "count": 30,
          "reactionType": "AWESOME"
        },
        {
          "__typename": "ReactionCountNode",
          "count": 1,
          "reactionType": "CONFUSED"
        }
      ],
      "rewardEnabled": null,
      "slug": "gray-code-jing-xiang-fan-she-fa-by-jyd",
      "status": "PUBLISHED",
      "summary": "§ 思路：\n\n设 n 阶格雷码集合为 G(n)，则 G(n+1) 阶格雷码为：\n\n给 G(n) 阶格雷码每个元素二进制形式前面添加 0，得到 G'(n)；\n设 G(n) 集合倒序（镜像）为 R(n)，给 R(n) 每个元素二进制形式前面添加 1，得到 R'(n)；\nG(n+1) = G'(n) ∪ R'(n) 拼接两个",
      "sunk": false,
      "tags": [
        {
          "__typename": "CommonTagNode",
          "name": "Java",
          "nameTranslated": "",
          "slug": "java",
          "tagType": "LANGUAGE"
        },
        {
          "__typename": "CommonTagNode",
          "name": "Python3",
          "nameTranslated": "",
          "slug": "python3",
          "tagType": "LANGUAGE"
        }
      ],
      "thumbnail": "",
      "title": "Gray Code （镜像反射法，图解）",
      "topic": {
        "__typename": "TopicNode",
        "commentCount": 177,
        "id": 13637,
        "viewCount": 40398
      },
      "uuid": "jQzEah",
      "videosInfo": []
    }
  }
}
