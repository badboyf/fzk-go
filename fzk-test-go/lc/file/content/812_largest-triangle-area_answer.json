{
  "data": {
    "solutionArticle": {
      "__typename": "SolutionArticleNode",
      "author": {
        "__typename": "UserNode",
        "profile": {
          "__typename": "UserProfileNode",
          "realName": "力扣 (LeetCode)",
          "userAvatar": "https://assets.leetcode-cn.com/aliyun-lc-upload/uploaded_files/2021/03/73c9f099-abbe-4d94-853f-f8abffd459cd/leetcode.png",
          "userSlug": "leetcode"
        },
        "username": "LeetCode"
      },
      "byLeetcode": true,
      "canEdit": false,
      "canEditReward": false,
      "canSee": true,
      "chargeType": "FREE",
      "content": "#### 枚举：\n\n我们可以枚举每一个三角形，计算面积并找出最大的面积值。根据三角形的三个顶点计算出面积的方法有很多种：\n\n* [鞋带公式](https://blog.csdn.net/c___c18/article/details/89284965)，用于计算任意多边形的面积，可用于计算三角形的面积；\n\n* [海伦公式](https://baike.baidu.com/item/%E6%B5%B7%E4%BC%A6%E5%85%AC%E5%BC%8F)，从三个顶点得到三边长，并使用海伦公式计算出面积；\n\n* 三角形面积公式 `S = 1/2 * a * b * sin(C)`，首先得到两边的长度，通过叉积算出夹角的正弦值，并使用公式计算出面积。\n\n下面的代码中使用的是鞋带公式计算三角形的面积。\n\n```Java [sol1]\nclass Solution {\n    public double largestTriangleArea(int[][] points) {\n        int N = points.length;\n        double ans = 0;\n        for (int i = 0; i < N; ++i)\n            for (int j = i+1; j < N; ++j)\n                for (int k = j+1; k < N; ++k)\n                    ans = Math.max(ans, area(points[i], points[j], points[k]));\n        return ans;\n    }\n\n    public double area(int[] P, int[] Q, int[] R) {\n        return 0.5 * Math.abs(P[0]*Q[1] + Q[0]*R[1] + R[0]*P[1]\n                             -P[1]*Q[0] - Q[1]*R[0] - R[1]*P[0]);\n    }\n}\n```\n\n```Python [sol1]\nclass Solution(object):\n    def largestTriangleArea(self, points):\n        def area(p, q, r):\n            return .5 * abs(p[0]*q[1]+q[0]*r[1]+r[0]*p[1]\n                           -p[1]*q[0]-q[1]*r[0]-r[1]*p[0])\n\n        return max(area(*triangle)\n            for triangle in itertools.combinations(points, 3))\n```\n\n**复杂度分析**\n\n* 时间复杂度：$O(N^3)$，其中 $N$ 是数组 `points` 的长度。\n\n* 空间复杂度：$O(1)$。",
      "createdAt": "2019-10-29T06:22:21.702532+00:00",
      "hitCount": 11138,
      "identifier": "MHKLQF",
      "isEditorsPick": false,
      "isMostPopular": false,
      "isMyFavorite": false,
      "next": {
        "__typename": "BriefSolutionNode",
        "slug": "li-yong-xing-lie-shi-de-yi-yi-qiu-jie-sa-pvrq",
        "title": "利用行列式的意义求解三角形面积"
      },
      "position": 1,
      "prev": null,
      "question": {
        "__typename": "QuestionNode",
        "questionTitleSlug": "largest-triangle-area"
      },
      "reactionType": null,
      "reactionsV2": [
        {
          "__typename": "ReactionCountNode",
          "count": 5,
          "reactionType": "UPVOTE"
        },
        {
          "__typename": "ReactionCountNode",
          "count": 3,
          "reactionType": "CONFUSED"
        },
        {
          "__typename": "ReactionCountNode",
          "count": 1,
          "reactionType": "THUMBS_DOWN"
        }
      ],
      "rewardEnabled": null,
      "slug": "zui-da-san-jiao-xing-mian-ji-by-leetcode",
      "status": "PUBLISHED",
      "summary": "枚举：\n我们可以枚举每一个三角形，计算面积并找出最大的面积值。根据三角形的三个顶点计算出面积的方法有很多种：\n\n\n鞋带公式，用于计算任意多边形的面积，可用于计算三角形的面积；\n\n\n海伦公式，从三个顶点得到三边长，并使用海伦公式计算出面积；\n\n\n三角形面积公式 S = 1/2 * a * b * sin(C)，首先得到",
      "sunk": false,
      "tags": [
        {
          "__typename": "CommonTagNode",
          "name": "Math",
          "nameTranslated": "数学",
          "slug": "math",
          "tagType": "TOPIC"
        },
        {
          "__typename": "CommonTagNode",
          "name": "Java",
          "nameTranslated": "",
          "slug": "java",
          "tagType": "LANGUAGE"
        },
        {
          "__typename": "CommonTagNode",
          "name": "Python",
          "nameTranslated": "",
          "slug": "python",
          "tagType": "LANGUAGE"
        }
      ],
      "thumbnail": "",
      "title": "最大三角形面积",
      "topic": {
        "__typename": "TopicNode",
        "commentCount": 17,
        "id": 38847,
        "viewCount": 8860
      },
      "uuid": "MHKLQF",
      "videosInfo": []
    }
  }
}
