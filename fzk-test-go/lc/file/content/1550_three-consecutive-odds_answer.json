{
  "data": {
    "solutionArticle": {
      "__typename": "SolutionArticleNode",
      "author": {
        "__typename": "UserNode",
        "profile": {
          "__typename": "UserProfileNode",
          "realName": "力扣官方题解",
          "userAvatar": "https://assets.leetcode-cn.com/aliyun-lc-upload/users/leetcode-solution/avatar_1582018938.png",
          "userSlug": "leetcode-solution"
        },
        "username": "LeetCode-Solution"
      },
      "byLeetcode": true,
      "canEdit": false,
      "canEditReward": false,
      "canSee": true,
      "chargeType": "FREE",
      "content": "#### 方法一：枚举\n\n**思路与算法**\n\n枚举所有的连续的三个元素，判断这三个元素是否都是奇数，如果是，则返回 `true`。如果所有的连续的三个元素中，没有一个满足条件，返回 `false`。\n\n**代码**\n\n```cpp [sol1-C++]\nclass Solution {\npublic:\n    bool threeConsecutiveOdds(vector<int>& arr) {\n        int n = arr.size();\n        for (int i = 0; i <= n - 3; ++i) {\n            if ((arr[i] & 1) & (arr[i + 1] & 1) & (arr[i + 2] & 1)) {\n                return true;\n            }\n        }\n        return false;\n    }\n};\n```\n\n```Java [sol1-Java]\nclass Solution {\n    public boolean threeConsecutiveOdds(int[] arr) {\n        int n = arr.length;\n        for (int i = 0; i <= n - 3; ++i) {\n            if ((arr[i] & 1) != 0 && (arr[i + 1] & 1) != 0 && (arr[i + 2] & 1) != 0) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n```\n\n```JavaScript [sol1-JavaScript]\nvar threeConsecutiveOdds = function(arr) {\n    const n = arr.length;\n    for (let i = 0; i <= n - 3; ++i) {\n        if ((arr[i] & 1) & (arr[i + 1] & 1) & (arr[i + 2] & 1)) {\n            return true;\n        }\n    }\n    return false;\n};\n```\n\n```Python [sol1-Python3]\nclass Solution:\n    def threeConsecutiveOdds(self, arr: List[int]) -> bool:\n        n = len(arr)\n        return n >= 3 and \\\n            any(arr[i] & 1 and arr[i + 1] & 1 and arr[i + 2] & 1 \\\n                for i in range(n - 2))\n```\n\n**复杂度分析**\n\n记原序列的长度为 $n$。\n\n+ 时间复杂度：$O(n)$。\n+ 空间复杂度：$O(1)$。",
      "createdAt": "2020-08-20T13:02:27.334255+00:00",
      "hitCount": 6127,
      "identifier": "iGt7mo",
      "isEditorsPick": false,
      "isMostPopular": false,
      "isMyFavorite": false,
      "next": {
        "__typename": "BriefSolutionNode",
        "slug": "shu-zu-by-euyvvl-wo9d",
        "title": "数组"
      },
      "position": 1,
      "prev": null,
      "question": {
        "__typename": "QuestionNode",
        "questionTitleSlug": "three-consecutive-odds"
      },
      "reactionType": null,
      "reactionsV2": [
        {
          "__typename": "ReactionCountNode",
          "count": 4,
          "reactionType": "UPVOTE"
        },
        {
          "__typename": "ReactionCountNode",
          "count": 1,
          "reactionType": "AWESOME"
        }
      ],
      "rewardEnabled": null,
      "slug": "cun-zai-lian-xu-san-ge-qi-shu-de-shu-zu-by-leetcod",
      "status": "PUBLISHED",
      "summary": "方法一：枚举 思路与算法 枚举所有的连续的三个元素，判断这三个元素是否都是奇数，如果是，则返回 true。如果所有的连续的三个元素中，没有一个满足条件，返回 false。 代码 cpp [sol1-C++] class Solution { public:     bool threeConsecutiveOdds(v",
      "sunk": false,
      "tags": [
        {
          "__typename": "CommonTagNode",
          "name": "C++",
          "nameTranslated": "",
          "slug": "cpp",
          "tagType": "LANGUAGE"
        },
        {
          "__typename": "CommonTagNode",
          "name": "Java",
          "nameTranslated": "",
          "slug": "java",
          "tagType": "LANGUAGE"
        },
        {
          "__typename": "CommonTagNode",
          "name": "JavaScript",
          "nameTranslated": "",
          "slug": "javascript",
          "tagType": "LANGUAGE"
        }
      ],
      "thumbnail": "",
      "title": "存在连续三个奇数的数组",
      "topic": {
        "__typename": "TopicNode",
        "commentCount": 22,
        "id": 382537,
        "viewCount": 5308
      },
      "uuid": "iGt7mo",
      "videosInfo": []
    }
  }
}
