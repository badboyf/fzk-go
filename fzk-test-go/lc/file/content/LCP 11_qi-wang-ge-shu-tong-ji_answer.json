{
  "data": {
    "solutionArticle": {
      "__typename": "SolutionArticleNode",
      "author": {
        "__typename": "UserNode",
        "profile": {
          "__typename": "UserProfileNode",
          "realName": "力扣官方题解",
          "userAvatar": "https://assets.leetcode-cn.com/aliyun-lc-upload/users/leetcode-solution/avatar_1582018938.png",
          "userSlug": "leetcode-solution"
        },
        "username": "LeetCode-Solution"
      },
      "byLeetcode": true,
      "canEdit": false,
      "canEditReward": false,
      "canSee": true,
      "chargeType": "FREE",
      "content": "## 题意概述：\n\n对于一个排好序的序列，对相同的数字随机打乱顺序后期望有多少个数字保持原位置不变。\n\n## 题解\n经过分析，我们发现不同能力值的简历是不会互相影响的，所以问题可以简化为有一个长度为 $n$ 的的数组，将里面的元素按照全排列随机排序后，问有多少个元素还在原位。设这个随机变量为 $X$ ，并且设 $X_i$ 是第 $i$ 个元素还在原位的 0-1 变量，即如果第 $i$ 个元素还在原位， $X_i = 1$ ，否则 $X_i = 0$。每一个元素随机排序后还在原位的概率是 $\\frac{1}{n}$ 。\n\n由期望的可加性，我们可以得到 \n\n$$E(X) = E(X_0 + X_1 + \\cdots + X_{n - 1}) = \\sum_{0 \\leq i < n}E(X_i) = \\frac{1}{n} * n = 1$$\n\n我们发现$E(X)$跟数组元素的长度**无关**，所以我们只需要求这个数组中的不同数字的个数即可。\n\n### 方法一：\n\n排序 + 除重\n\n```C++\nclass Solution {\npublic:\n    int expectNumber(vector<int>& scores) {\n        sort(scores.begin(), scores.end());\n        return unique(scores.begin(), scores.end()) - scores.begin();\n    }\n};\n```\n\n#### 复杂度分析\n\n* 时间复杂度：$O(N \\log N)$，其中 $N$ 是数组的大小。\n\n* 空间复杂度：$O(N)$。\n\n### 方法二：\n\n哈希表\n```Python\nclass Solution:\n    def expectNumber(self, scores: List[int]) -> int:\n        return len(set(scores))\n```\n\n#### 复杂度分析\n\n* 时间复杂度：$O(N)$，其中 $N$ 是数组的大小。\n\n* 空间复杂度：$O(N)$。",
      "createdAt": "2020-04-29T05:46:34.161031+00:00",
      "hitCount": 5703,
      "identifier": "hBKVyZ",
      "isEditorsPick": false,
      "isMostPopular": false,
      "isMyFavorite": false,
      "next": {
        "__typename": "BriefSolutionNode",
        "slug": "yi-xing-dai-ma-nian-qing-ren-cong-lai-bu-gg2k",
        "title": "一行代码，年轻人从来不讲武德"
      },
      "position": 1,
      "prev": null,
      "question": {
        "__typename": "QuestionNode",
        "questionTitleSlug": "qi-wang-ge-shu-tong-ji"
      },
      "reactionType": null,
      "reactionsV2": [
        {
          "__typename": "ReactionCountNode",
          "count": 4,
          "reactionType": "UPVOTE"
        },
        {
          "__typename": "ReactionCountNode",
          "count": 1,
          "reactionType": "AWESOME"
        }
      ],
      "rewardEnabled": null,
      "slug": "qi-wang-ge-shu-tong-ji-qi-wang-ji-suan-yu-zheng-mi",
      "status": "PUBLISHED",
      "summary": "题意概述： 对于一个排好序的序列，对相同的数字随机打乱顺序后期望有多少个数字保持原位置不变。 题解 经过分析，我们发现不同能力值的简历是不会互相影响的，所以问题可以简化为有一个长度为 $n$ 的的数组，将里面的元素按照全排列随机排序后，问有多少个元素还在原位。设这个随机变量为 $X$ ，并且设 $X_i$ 是第 $i$",
      "sunk": false,
      "tags": [
        {
          "__typename": "CommonTagNode",
          "name": "Math",
          "nameTranslated": "数学",
          "slug": "math",
          "tagType": "TOPIC"
        },
        {
          "__typename": "CommonTagNode",
          "name": "C++",
          "nameTranslated": "",
          "slug": "cpp",
          "tagType": "LANGUAGE"
        },
        {
          "__typename": "CommonTagNode",
          "name": "Python",
          "nameTranslated": "",
          "slug": "python",
          "tagType": "LANGUAGE"
        }
      ],
      "thumbnail": "",
      "title": "期望个数统计 期望计算与证明",
      "topic": {
        "__typename": "TopicNode",
        "commentCount": 15,
        "id": 224888,
        "viewCount": 4689
      },
      "uuid": "hBKVyZ",
      "videosInfo": []
    }
  }
}
