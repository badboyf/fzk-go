{
  "data": {
    "question": {
      "__typename": "QuestionNode",
      "book": null,
      "boundTopicId": 1357,
      "categoryTitle": "Database",
      "codeSnippets": [
        {
          "__typename": "CodeSnippetNode",
          "code": "# Write your MySQL query statement below",
          "lang": "MySQL",
          "langSlug": "mysql"
        },
        {
          "__typename": "CodeSnippetNode",
          "code": "/* Write your T-SQL query statement below */",
          "lang": "MS SQL Server",
          "langSlug": "mssql"
        },
        {
          "__typename": "CodeSnippetNode",
          "code": "/* Write your PL/SQL query statement below */",
          "lang": "Oracle",
          "langSlug": "oraclesql"
        }
      ],
      "companyTagStats": null,
      "content": "<p>Table: <code>Person</code></p>\n\n<pre>\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| id          | int     |\n| email       | varchar |\n+-------------+---------+\nid is the primary key column for this table.\nEach row of this table contains an email. The emails will not contain uppercase letters.\n</pre>\n\n<p>&nbsp;</p>\n\n<p>Write an SQL query to report all the duplicate emails.</p>\n\n<p>Return the result table in <strong>any order</strong>.</p>\n\n<p>The query result format is in the following example.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> \nPerson table:\n+----+---------+\n| id | email   |\n+----+---------+\n| 1  | a@b.com |\n| 2  | c@d.com |\n| 3  | a@b.com |\n+----+---------+\n<strong>Output:</strong> \n+---------+\n| Email   |\n+---------+\n| a@b.com |\n+---------+\n<strong>Explanation:</strong> a@b.com is repeated two times.\n</pre>\n",
      "contributors": [],
      "dailyRecordStatus": null,
      "difficulty": "Easy",
      "dislikes": 0,
      "editorType": "CKEDITOR",
      "enableRunCode": true,
      "envInfo": "{\"mysql\":[\"MySQL\",\"<p>\\u7248\\u672c\\uff1a<code>MySQL 8.0<\\/code><\\/p>\"],\"mssql\":[\"MS SQL Server\",\"<p>mssql server 2019.<\\/p>\"],\"oraclesql\":[\"Oracle\",\"<p>Oracle Sql 11.2.<\\/p>\"]}",
      "exampleTestcases": "{\"headers\": {\"Person\": [\"id\", \"email\"]}, \"rows\": {\"Person\": [[1, \"a@b.com\"], [2, \"c@d.com\"], [3, \"a@b.com\"]]}}",
      "hints": [],
      "isDailyQuestion": false,
      "isLiked": null,
      "isPaidOnly": false,
      "isSubscribed": false,
      "judgeType": "large",
      "judgerAvailable": true,
      "langToValidPlayground": "{\"cpp\": false, \"java\": false, \"python\": false, \"python3\": false, \"mysql\": false, \"mssql\": false, \"oraclesql\": false, \"c\": false, \"csharp\": false, \"javascript\": false, \"ruby\": false, \"bash\": false, \"swift\": false, \"golang\": false, \"scala\": false, \"html\": false, \"pythonml\": false, \"kotlin\": false, \"rust\": false, \"php\": false, \"typescript\": false, \"racket\": false, \"erlang\": false, \"elixir\": false}",
      "likes": 315,
      "metaData": "{\n  \"mysql\": [\n    \"Create table If Not Exists Person (id int, email varchar(255))\"\n  ],\n  \"mssql\": [\n    \"Create table Person (id int, email varchar(255))\"\n  ],\n  \"oraclesql\": [\n    \"Create table Person (id int, email varchar(255))\"\n  ],\n  \"database\": true\n}",
      "mysqlSchemas": [
        "Create table If Not Exists Person (id int, email varchar(255))",
        "Truncate table Person",
        "insert into Person (id, email) values ('1', 'a@b.com')",
        "insert into Person (id, email) values ('2', 'c@d.com')",
        "insert into Person (id, email) values ('3', 'a@b.com')"
      ],
      "questionFrontendId": "182",
      "questionId": "182",
      "sampleTestCase": "{\"headers\": {\"Person\": [\"id\", \"email\"]}, \"rows\": {\"Person\": [[1, \"a@b.com\"], [2, \"c@d.com\"], [3, \"a@b.com\"]]}}",
      "similarQuestions": "[]",
      "solution": {
        "__typename": "ArticleNode",
        "canSeeDetail": true,
        "id": "103"
      },
      "stats": "{\"totalAccepted\": \"191.5K\", \"totalSubmission\": \"240.9K\", \"totalAcceptedRaw\": 191530, \"totalSubmissionRaw\": 240870, \"acRate\": \"79.5%\"}",
      "status": null,
      "style": "LEETCODE",
      "title": "Duplicate Emails",
      "titleSlug": "duplicate-emails",
      "topicTags": [
        {
          "__typename": "TopicTagNode",
          "name": "Database",
          "slug": "database",
          "translatedName": "数据库"
        }
      ],
      "translatedContent": "<p>编写一个 SQL 查询，查找&nbsp;<code>Person</code> 表中所有重复的电子邮箱。</p>\n\n<p><strong>示例：</strong></p>\n\n<pre>+----+---------+\n| Id | Email   |\n+----+---------+\n| 1  | a@b.com |\n| 2  | c@d.com |\n| 3  | a@b.com |\n+----+---------+\n</pre>\n\n<p>根据以上输入，你的查询应返回以下结果：</p>\n\n<pre>+---------+\n| Email   |\n+---------+\n| a@b.com |\n+---------+\n</pre>\n\n<p><strong>说明：</strong>所有电子邮箱都是小写字母。</p>\n",
      "translatedTitle": "查找重复的电子邮箱",
      "ugcQuestionId": null
    }
  }
}
