{
  "data": {
    "solutionArticle": {
      "__typename": "SolutionArticleNode",
      "author": {
        "__typename": "UserNode",
        "profile": {
          "__typename": "UserProfileNode",
          "realName": "力扣官方题解",
          "userAvatar": "https://assets.leetcode-cn.com/aliyun-lc-upload/users/leetcode-solution/avatar_1582018938.png",
          "userSlug": "leetcode-solution"
        },
        "username": "LeetCode-Solution"
      },
      "byLeetcode": true,
      "canEdit": false,
      "canEditReward": false,
      "canSee": true,
      "chargeType": "FREE",
      "content": "#### 方法一：模拟\n\n**思路与算法**\n\n我们以两个字符为一组对字符串按要求进行修改即可。\n\n对于 $\\texttt{C++}$，我们直接在 $\\textit{s}$ 上进行修改即可。\n\n对于 $\\texttt{Python}$，由于我们无法直接修改字符串，因此需要引入辅助数组 $\\textit{arr}$，并在辅助数组上进行相应操作，最终转化回字符串。\n\n**代码**\n\n```C++ [sol1-C++]\nclass Solution {\npublic:\n    string replaceDigits(string s) {\n        int n = s.size();\n        for (int i = 1; i < n; i += 2){\n            s[i] = s[i-1] + (s[i] - '0');\n        }\n        return s;\n    }\n};\n```\n\n```Python [sol1-Python3]\nclass Solution:\n    def replaceDigits(self, s: str) -> str:\n        n = len(s)\n        arr = list(s)\n        for i in range(1, n, 2):\n            arr[i] = chr(ord(arr[i-1]) + int(arr[i]))\n        return \"\".join(arr)\n```\n\n**复杂度分析**\n\n- 时间复杂度：$O(n)$，其中 $n$ 为字符串的长度。我们对字符串进行了常数次数的遍历操作，单次遍历操作的时间复杂度为 $O(n)$。\n\n- 空间复杂度：这里由于 $\\texttt{Python}$ 中无法修改字符串，因此不同语言的代码实现有一定区别。对应的空间复杂度也有所区别。\n\n    - $\\texttt{C++}$ 代码：$O(1)$，我们直接对原字符串进行修改。\n\n    - $\\texttt{Python}$ 代码：$O(n)$，即为辅助数组 $\\textit{arr}$ 的空间开销。",
      "createdAt": "2021-05-02T01:45:24.566241+00:00",
      "hitCount": 1935,
      "identifier": "0IKVZl",
      "isEditorsPick": false,
      "isMostPopular": false,
      "isMyFavorite": false,
      "next": {
        "__typename": "BriefSolutionNode",
        "slug": "jian-dan-di-bian-li-ji-ke-by-vigorous-yo-fm99",
        "title": "简单地遍历即可"
      },
      "position": 1,
      "prev": null,
      "question": {
        "__typename": "QuestionNode",
        "questionTitleSlug": "replace-all-digits-with-characters"
      },
      "reactionType": null,
      "reactionsV2": [
        {
          "__typename": "ReactionCountNode",
          "count": 3,
          "reactionType": "UPVOTE"
        }
      ],
      "rewardEnabled": null,
      "slug": "jiang-suo-you-shu-zi-yong-zi-fu-ti-huan-r77zx",
      "status": "PUBLISHED",
      "summary": "方法一：模拟 思路与算法 我们以两个字符为一组对字符串按要求进行修改即可。 对于 $\\texttt{C++}$，我们直接在 $\\textit{s}$ 上进行修改即可。 对于 $\\texttt{Python}$，由于我们无法直接修改字符串，因此需要引入辅助数组 $\\textit{arr}$，并在辅助数组上进行相应操作，最",
      "sunk": false,
      "tags": [
        {
          "__typename": "CommonTagNode",
          "name": "String",
          "nameTranslated": "字符串",
          "slug": "string",
          "tagType": "TOPIC"
        },
        {
          "__typename": "CommonTagNode",
          "name": "C++",
          "nameTranslated": "",
          "slug": "cpp",
          "tagType": "LANGUAGE"
        },
        {
          "__typename": "CommonTagNode",
          "name": "Python",
          "nameTranslated": "",
          "slug": "python",
          "tagType": "LANGUAGE"
        }
      ],
      "thumbnail": "",
      "title": "将所有数字用字符替换",
      "topic": {
        "__typename": "TopicNode",
        "commentCount": 8,
        "id": 754912,
        "viewCount": 1669
      },
      "uuid": "0IKVZl",
      "videosInfo": []
    }
  }
}
