{
  "data": {
    "solutionArticle": {
      "__typename": "SolutionArticleNode",
      "author": {
        "__typename": "UserNode",
        "profile": {
          "__typename": "UserProfileNode",
          "realName": "力扣官方题解",
          "userAvatar": "https://assets.leetcode-cn.com/aliyun-lc-upload/users/leetcode-solution/avatar_1582018938.png",
          "userSlug": "leetcode-solution"
        },
        "username": "LeetCode-Solution"
      },
      "byLeetcode": true,
      "canEdit": false,
      "canEditReward": false,
      "canSee": true,
      "chargeType": "FREE",
      "content": "#### 方法一：数学推理\n\n**思路与算法**\n\n让我们考虑一些小例子。显而易见的是，如果石头堆中只有一块、两块、或是三块石头，那么在你的回合，你就可以把全部石子拿走，从而在游戏中取胜；如果堆中恰好有四块石头，你就会失败。因为在这种情况下不管你取走多少石头，总会为你的对手留下几块，他可以将剩余的石头全部取完，从而他可以在游戏中打败你。因此，要想获胜，在你的回合中，必须避免石头堆中的石子数为 $4$ 的情况。\n\n+ 我们继续推理，假设当前堆里只剩下五块、六块、或是七块石头，你可以控制自己拿取的石头数，总是恰好给你的对手留下四块石头，使他输掉这场比赛。但是如果石头堆里有八块石头，你就不可避免地会输掉，因为不管你从一堆石头中挑出一块、两块还是三块，你的对手都可以选择三块、两块或一块，以确保在再一次轮到你的时候，你会面对四块石头。显然我们继续推理，可以看到它会以相同的模式不断重复 $n = 4, 8, 12, 16, \\ldots$，基本可以看出如果堆里的石头数目为 $4$ 的倍数时，你一定会输掉游戏。\n\n+ 如果总的石头数目为 $4$ 的倍数时，因为无论你取多少石头，对方总有对应的取法，让剩余的石头的数目继续为 $4$ 的倍数。对于你或者你的对手取石头时，显然最优的选择是当前己方取完石头后，让剩余的石头的数目为 $4$ 的倍数。假设当前的石头数目为 $x$，如果 $x$ 为 $4$ 的倍数时，则此时你必然会输掉游戏；如果 $x$ 不为 $4$ 的倍数时，则此时你只需要取走 $x \\bmod 4$ 个石头时，则剩余的石头数目必然为 $4$ 的倍数，从而对手会输掉游戏。\n\n**代码**\n\n```C++ [sol1-C++]\nclass Solution {\npublic:\n    bool canWinNim(int n) {\n        return n % 4 != 0;\n    }\n};\n```\n\n```Java [sol1-Java]\nclass Solution {\n    public boolean canWinNim(int n) {\n        return n % 4 != 0;\n    }\n}\n```\n\n```C# [sol1-C#]\nclass Solution {\n    public boolean canWinNim(int n) {\n        return n % 4 != 0;\n    }\n}\n```\n\n```Python [sol1-Python3]\nclass Solution:\n    def canWinNim(self, n: int) -> bool:\n        return n % 4 != 0\n```\n\n```JavaScript [sol1-JavaScript]\nvar canWinNim = function(n) {\n    return n % 4 !== 0;\n};\n```\n\n```C [sol1-C]\nbool canWinNim(int n) {\n    return n % 4 != 0;\n}\n```\n\n```go [sol1-Golang]\nfunc canWinNim(n int) bool {\n    return n%4 != 0\n}\n```\n\n**复杂度分析**\n\n- 时间复杂度：$O(1)$。\n\n- 空间复杂度：$O(1)$。",
      "createdAt": "2021-09-17T15:18:31.325691+00:00",
      "hitCount": 21065,
      "identifier": "QI9xZQ",
      "isEditorsPick": false,
      "isMostPopular": false,
      "isMyFavorite": false,
      "next": {
        "__typename": "BriefSolutionNode",
        "slug": "gong-shui-san-xie-noxiang-xin-ke-xue-xi-wmz2t",
        "title": "【宫水三叶の相信科学系列】如何从「找规律」到「博弈论」推论分析"
      },
      "position": 1,
      "prev": null,
      "question": {
        "__typename": "QuestionNode",
        "questionTitleSlug": "nim-game"
      },
      "reactionType": null,
      "reactionsV2": [
        {
          "__typename": "ReactionCountNode",
          "count": 24,
          "reactionType": "UPVOTE"
        }
      ],
      "rewardEnabled": null,
      "slug": "nim-you-xi-by-leetcode-solution-95g8",
      "status": "PREPUBLISH",
      "summary": "方法一：数学推理 思路与算法 让我们考虑一些小例子。显而易见的是，如果石头堆中只有一块、两块、或是三块石头，那么在你的回合，你就可以把全部石子拿走，从而在游戏中取胜；如果堆中恰好有四块石头，你就会失败。因为在这种情况下不管你取走多少石头，总会为你的对手留下几块，他可以将剩余的石头全部取完，从而他可以在游戏中打败你。因此",
      "sunk": false,
      "tags": [
        {
          "__typename": "CommonTagNode",
          "name": "Brainteaser",
          "nameTranslated": "脑筋急转弯",
          "slug": "brainteaser",
          "tagType": "TOPIC"
        },
        {
          "__typename": "CommonTagNode",
          "name": "Math",
          "nameTranslated": "数学",
          "slug": "math",
          "tagType": "TOPIC"
        },
        {
          "__typename": "CommonTagNode",
          "name": "Game Theory",
          "nameTranslated": "博弈",
          "slug": "game-theory",
          "tagType": "TOPIC"
        },
        {
          "__typename": "CommonTagNode",
          "name": "C",
          "nameTranslated": "",
          "slug": "c",
          "tagType": "LANGUAGE"
        },
        {
          "__typename": "CommonTagNode",
          "name": "C++",
          "nameTranslated": "",
          "slug": "cpp",
          "tagType": "LANGUAGE"
        },
        {
          "__typename": "CommonTagNode",
          "name": "C#",
          "nameTranslated": "",
          "slug": "csharp",
          "tagType": "LANGUAGE"
        },
        {
          "__typename": "CommonTagNode",
          "name": "Go",
          "nameTranslated": "",
          "slug": "golang",
          "tagType": "LANGUAGE"
        },
        {
          "__typename": "CommonTagNode",
          "name": "Java",
          "nameTranslated": "",
          "slug": "java",
          "tagType": "LANGUAGE"
        },
        {
          "__typename": "CommonTagNode",
          "name": "JavaScript",
          "nameTranslated": "",
          "slug": "javascript",
          "tagType": "LANGUAGE"
        },
        {
          "__typename": "CommonTagNode",
          "name": "Python",
          "nameTranslated": "",
          "slug": "python",
          "tagType": "LANGUAGE"
        }
      ],
      "thumbnail": "",
      "title": "Nim 游戏",
      "topic": {
        "__typename": "TopicNode",
        "commentCount": 131,
        "id": 1003627,
        "viewCount": 18592
      },
      "uuid": "QI9xZQ",
      "videosInfo": []
    }
  }
}
