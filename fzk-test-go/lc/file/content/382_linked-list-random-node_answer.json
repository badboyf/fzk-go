{
  "data": {
    "solutionArticle": {
      "__typename": "SolutionArticleNode",
      "author": {
        "__typename": "UserNode",
        "profile": {
          "__typename": "UserProfileNode",
          "realName": "jackvin",
          "userAvatar": "https://assets.leetcode-cn.com/aliyun-lc-upload/users/jackwener/avatar_1539321209.png",
          "userSlug": "jackwener"
        },
        "username": "jackwener"
      },
      "byLeetcode": false,
      "canEdit": false,
      "canEditReward": false,
      "canSee": true,
      "chargeType": "FREE",
      "content": "## 前言\n\n如果您觉得我的题解尚可，欢迎给我点赞\n[另外一个随机算法--洗牌算法](https://leetcode-cn.com/problems/shuffle-an-array/solution/xi-pai-suan-fa-xiang-jie-by-jackwener/)\n\n## 蓄水池抽样算法\n\n最近经常能看到面经中出现在大数据流中的随机抽样问题\n\n即：当内存无法加载全部数据时，如何从包含未知大小的数据流中随机选取k个数据，并且要保证每个数据被抽取到的概率相等。\n\n### 当 k = 1 时，即此题的情况\n\n也就是说，我们每次只能读一个数据。\n\n假设数据流含有N个数，我们知道如果要保证所有的数被抽到的概率相等，那么每个数抽到的概率应该为 1/N \n\n那如何保证呢？\n\n先说方案：\n\n每次只保留一个数，当遇到第 i 个数时，以 1/i的概率保留它，(i-1)/i的概率保留原来的数。\n\n举例说明： 1 - 10\n\n- 遇到1，概率为1，保留第一个数。\n- 遇到2，概率为1/2，这个时候，1和2各1/2的概率被保留\n- 遇到3，3被保留的概率为1/3，(之前剩下的数假设1被保留)，2/3的概率 1 被保留，(此时1被保留的总概率为 2/3 * 1/2 = 1/3)\n- 遇到4，4被保留的概率为1/4，(之前剩下的数假设1被保留)，3/4的概率 1 被保留，(此时1被保留的总概率为 3/4 * 2/3 * 1/2 = 1/4)\n\n以此类推，每个数被保留的概率都是1/N。\n\n证明使用数学归纳法即可\n\n```python\nimport random\nclass Solution:\n\n    def __init__(self, head: ListNode):\n        self.head = head\n        \n    def getRandom(self) -> int:\n        count = 0\n        reserve = 0\n        cur = self.head\n        while cur:\n            count += 1\n            rand = random.randint(1,count)\n            if rand == count:\n                reserve = cur.val\n            cur = cur.next\n        return reserve\n```\n\n### 当 k = m 时\n\n也就是说，我们每次能读m个数据。\n\n和上面相同的道理，只不过概率在每次乘以了m而已\n\n![1.png](https://pic.leetcode-cn.com/831bdf1ea840c47b79007f206fb9fe6f1a1effb6c5ceed15509fe0abb23ed2f9.jpg)\n\n\n\n\n\n\n",
      "createdAt": "2020-03-06T13:43:45.078004+00:00",
      "hitCount": 17330,
      "identifier": "hEGPhq",
      "isEditorsPick": false,
      "isMostPopular": true,
      "isMyFavorite": false,
      "next": {
        "__typename": "BriefSolutionNode",
        "slug": "xu-shui-chi-chou-yang-suan-fa-sha-zi-du-neng-kan-d",
        "title": "蓄水池抽样算法  傻子都能看懂"
      },
      "position": 1,
      "prev": null,
      "question": {
        "__typename": "QuestionNode",
        "questionTitleSlug": "linked-list-random-node"
      },
      "reactionType": null,
      "reactionsV2": [
        {
          "__typename": "ReactionCountNode",
          "count": 147,
          "reactionType": "UPVOTE"
        },
        {
          "__typename": "ReactionCountNode",
          "count": 6,
          "reactionType": "AWESOME"
        },
        {
          "__typename": "ReactionCountNode",
          "count": 1,
          "reactionType": "CONFUSED"
        },
        {
          "__typename": "ReactionCountNode",
          "count": 0,
          "reactionType": "THUMBS_DOWN"
        }
      ],
      "rewardEnabled": null,
      "slug": "xu-shui-chi-chou-yang-suan-fa-by-jackwener",
      "status": "PUBLISHED",
      "summary": "前言\n如果您觉得我的题解尚可，欢迎给我点赞\n另外一个随机算法--洗牌算法\n蓄水池抽样算法\n最近经常能看到面经中出现在大数据流中的随机抽样问题\n即：当内存无法加载全部数据时，如何从包含未知大小的数据流中随机选取k个数据，并且要保证每个数据被抽取到的概率相等。\n当 k = 1 时，即此题的情况\n也就是说，我们每次只能读一个",
      "sunk": false,
      "tags": [],
      "thumbnail": "https://pic.leetcode-cn.com/831bdf1ea840c47b79007f206fb9fe6f1a1effb6c5ceed15509fe0abb23ed2f9.jpg",
      "title": "蓄水池抽样算法",
      "topic": {
        "__typename": "TopicNode",
        "commentCount": 32,
        "id": 135440,
        "viewCount": 11774
      },
      "uuid": "hEGPhq",
      "videosInfo": []
    }
  }
}
