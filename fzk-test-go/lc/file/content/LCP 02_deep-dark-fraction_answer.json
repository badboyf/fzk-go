{
  "data": {
    "solutionArticle": {
      "__typename": "SolutionArticleNode",
      "author": {
        "__typename": "UserNode",
        "profile": {
          "__typename": "UserProfileNode",
          "realName": "算法小爱",
          "userAvatar": "https://assets.leetcode-cn.com/aliyun-lc-upload/users/helen_class/avatar_1631327629.png",
          "userSlug": "helen_class"
        },
        "username": "Helen_Class"
      },
      "byLeetcode": false,
      "canEdit": false,
      "canEditReward": false,
      "canSee": true,
      "chargeType": "FREE",
      "content": "![LCP02-edit.mp4](2a40e820-e191-4dfe-af50-80bfbb0d2b81)\r\n\r\n<br>\r\n\r\n> 大家好，这里是热爱算法的女孩子小爱，[力扣杯](https://leetcode-cn.com/contest/season/2021-fall/?utm_campaign=lccup_2021_fall&utm_medium=leetcode_problemset&utm_source=problemset&gio_link_id=nPNw3eko)即将来袭，小爱准备学习往届真题，并与大家一起分享！关注[小爱老师的算法课堂](https://space.bilibili.com/1716757387/)，分享高质量算法视频与文字题解，欢迎大家多多支持，与小爱互动呀！\r\n\r\n---\r\n\r\n###  题目分析：模拟、最大公约数\r\n\r\n本题让我们进行连续的分数化简，我们可以发现，这是一个循环过程。在对原数组进行逆序操作后，我们会发现，第 $i$ 轮实际上是对 $a[i] + \\frac{c}{d}$ 的式子进行通分、化简、取倒数，得到的结果将作为第 $i + 1$ 轮的 $\\frac{c}{d}$ 。\r\n\r\n---\r\n\r\n### 算法细节：\r\n\r\n在代码实现中，第一轮我们要化简的是 $a[1] + \\frac{1}{a[0]}$，所以我们定义初始值为 $c = 1, d = a[0]$。\r\n\r\n每一轮，我们通分 $a[i] + \\frac{c}{d} = \\frac{a[i] \\times d + c}{d}$，并通过分子分母同除最大公约数 $g = gcd(a[i] \\times d + c, d)$ 得到最简分数。再取倒数，并将得到的分子、分母赋值给 $c, d$，以便下一轮计算使用。\r\n\r\n特别地，根据题目给定的公式，最后一轮化简是没有取倒数这一环节的。但在我们的代码中，每次循环最后都要进行一次取倒数。所以最后一轮多做了一次取倒数，我们在最后，需要重新互换 $c, d$ 的值，得到的才是最终结果。\r\n\r\n---\r\n\r\n### 代码：\r\n\r\n```c++\r\nclass Solution {\r\npublic:\r\n    vector<int> fraction(vector<int>& cont) {\r\n        reverse(cont.begin(), cont.end());\r\n        // 初始值：a[1] + 1 / a[0]\r\n        int c = 1, d = cont[0];\r\n        int n = cont.size();\r\n        for(int i = 1; i < n; i++) {\r\n            // a[i] + c / d = (a[i] * d + c) / d\r\n            int new_c = cont[i] * d + c;\r\n            int new_d = d;\r\n\r\n            // 化简最简分数\r\n            int g = gcd(new_c, new_d);\r\n            new_c /= g;\r\n            new_d /= g;\r\n\r\n            // 取倒数，赋值给新的 c / d\r\n            c = new_d;\r\n            d = new_c;\r\n        }\r\n\r\n        // 最后一轮，没有取倒数这一步\r\n        swap(c, d);\r\n\r\n        return vector<int>{c, d};\r\n\r\n    }\r\n};\r\n```\r\n\r\n---\r\n\r\n### 复杂度分析：\r\n\r\n- 时间复杂度：$O(n)$\r\n- 空间复杂度：$O(n)$\r\n",
      "createdAt": "2021-08-20T04:33:31.946397+00:00",
      "hitCount": 902,
      "identifier": "FB6Lz0",
      "isEditorsPick": false,
      "isMostPopular": false,
      "isMyFavorite": false,
      "next": {
        "__typename": "BriefSolutionNode",
        "slug": "shu-xue-tui-dao-by-fa-fa-2-msr0",
        "title": "数学推导"
      },
      "position": 1,
      "prev": null,
      "question": {
        "__typename": "QuestionNode",
        "questionTitleSlug": "deep-dark-fraction"
      },
      "reactionType": null,
      "reactionsV2": [
        {
          "__typename": "ReactionCountNode",
          "count": 11,
          "reactionType": "UPVOTE"
        },
        {
          "__typename": "ReactionCountNode",
          "count": 2,
          "reactionType": "AWESOME"
        }
      ],
      "rewardEnabled": null,
      "slug": "xiao-ai-lao-shi-li-kou-bei-li-jie-zhen-t-0e9b",
      "status": "PREPUBLISH",
      "summary": "大家好，这里是热爱算法的女孩子小爱，力扣杯即将来袭，小爱准备学习往届真题，并与大家一起分享！关注小爱老师的算法课堂，分享高质量算法视频与文字题解，欢迎大家多多支持，与小爱互动呀！\n\n题目分析：模拟、最大公约数\n本题让我们进行连续的分数化简，我们可以发现，这是一个循环过程。在对原数组进行逆序操作后，我们会发现，第 i",
      "sunk": false,
      "tags": [
        {
          "__typename": "CommonTagNode",
          "name": "Math",
          "nameTranslated": "数学",
          "slug": "math",
          "tagType": "TOPIC"
        },
        {
          "__typename": "CommonTagNode",
          "name": "C++",
          "nameTranslated": "",
          "slug": "cpp",
          "tagType": "LANGUAGE"
        },
        {
          "__typename": "CommonTagNode",
          "name": "Simulation",
          "nameTranslated": "模拟",
          "slug": "simulation",
          "tagType": "TOPIC"
        }
      ],
      "thumbnail": "",
      "title": " 【算法小爱-力扣杯历届真题视频题解】模拟 + 最大公约数",
      "topic": {
        "__typename": "TopicNode",
        "commentCount": 0,
        "id": 947316,
        "viewCount": 700
      },
      "uuid": "FB6Lz0",
      "videosInfo": [
        {
          "__typename": "VideoInfoNode",
          "coverUrl": "https://video.leetcode-cn.com/6bba8782762b4a46942c52b8dad881a1/snapshots/faebbea7f9104439b7f2cfcae7acd825-00005.jpg",
          "duration": 212.5457,
          "videoId": "6bba8782762b4a46942c52b8dad881a1"
        }
      ]
    }
  }
}
