{
  "data": {
    "solutionArticle": {
      "__typename": "SolutionArticleNode",
      "author": {
        "__typename": "UserNode",
        "profile": {
          "__typename": "UserProfileNode",
          "realName": "力扣官方题解",
          "userAvatar": "https://assets.leetcode-cn.com/aliyun-lc-upload/users/leetcode-solution/avatar_1582018938.png",
          "userSlug": "leetcode-solution"
        },
        "username": "LeetCode-Solution"
      },
      "byLeetcode": true,
      "canEdit": false,
      "canEditReward": false,
      "canSee": true,
      "chargeType": "FREE",
      "content": "#### 方法一：构造\n\n我们首先将最小的 `n - 1` 个自然数 `0, 1, 2, ..., n - 2` 放入数组中，它们的和为 `sum`。对于剩下的 `1` 个数，我们可以令其为 `-sum`，此时这 `n` 个数的和为 `0`，并且：\n\n- 当 `n = 1` 时，我们构造的答案中只有唯一的 `1` 个数 `0`；\n\n- 当 `n > 1` 时，我们构造的答案中包含 `n - 1` 个互不相同的自然数和 `1` 个负数；\n\n因此这 `n` 个数互不相同，即我们得到了一个满足要求的数组。\n\n```C++ [sol1-C++]\nclass Solution {\npublic:\n    vector<int> sumZero(int n) {\n        vector<int> ans;\n        int sum = 0;\n        for (int i = 0; i < n - 1; ++i) {\n            ans.push_back(i);\n            sum += i;\n        }\n        ans.push_back(-sum);\n        return ans;\n    }\n};\n```\n\n```Python [sol1-Python3]\nclass Solution:\n    def sumZero(self, n: int) -> List[int]:\n        ans = [x for x in range(n - 1)]\n        ans.append(-sum(ans))\n        return ans\n```\n\n**复杂度分析**\n\n- 时间复杂度：$O(N)$。\n\n- 空间复杂度：$O(1)$，除了存储答案的数组 `ans` 之外，额外的空间复杂度是 $O(1)$。",
      "createdAt": "2020-02-19T03:22:26.258663+00:00",
      "hitCount": 7536,
      "identifier": "LjwQzd",
      "isEditorsPick": false,
      "isMostPopular": false,
      "isMyFavorite": false,
      "next": {
        "__typename": "BriefSolutionNode",
        "slug": "python-by-haotianmingyue-smtl",
        "title": "python"
      },
      "position": 1,
      "prev": null,
      "question": {
        "__typename": "QuestionNode",
        "questionTitleSlug": "find-n-unique-integers-sum-up-to-zero"
      },
      "reactionType": null,
      "reactionsV2": [
        {
          "__typename": "ReactionCountNode",
          "count": 3,
          "reactionType": "UPVOTE"
        },
        {
          "__typename": "ReactionCountNode",
          "count": 1,
          "reactionType": "AWESOME"
        }
      ],
      "rewardEnabled": null,
      "slug": "he-wei-ling-de-nge-wei-yi-zheng-shu-by-leetcode-so",
      "status": "PUBLISHED",
      "summary": " 方法一：构造\n我们首先将最小的 n - 1 个自然数 0, 1, 2, ..., n - 2 放入数组中，它们的和为 sum。对于剩下的 1 个数，我们可以令其为 -sum，此时这 n 个数的和为 0，并且：\n\n\n当 n = 1 时，我们构造的答案中只有唯一的 1 个数 0；\n\n\n当 n > 1 时，我们构造的答案中",
      "sunk": false,
      "tags": [
        {
          "__typename": "CommonTagNode",
          "name": "C++",
          "nameTranslated": "",
          "slug": "cpp",
          "tagType": "LANGUAGE"
        },
        {
          "__typename": "CommonTagNode",
          "name": "Python3",
          "nameTranslated": "",
          "slug": "python3",
          "tagType": "LANGUAGE"
        }
      ],
      "thumbnail": "",
      "title": "和为零的N个唯一整数",
      "topic": {
        "__typename": "TopicNode",
        "commentCount": 18,
        "id": 101790,
        "viewCount": 6814
      },
      "uuid": "LjwQzd",
      "videosInfo": []
    }
  }
}
