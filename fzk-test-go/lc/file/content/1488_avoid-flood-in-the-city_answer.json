{
  "data": {
    "solutionArticle": {
      "__typename": "SolutionArticleNode",
      "author": {
        "__typename": "UserNode",
        "profile": {
          "__typename": "UserProfileNode",
          "realName": "Ikaruga",
          "userAvatar": "https://assets.leetcode-cn.com/aliyun-lc-upload/users/ikaruga/avatar_1557742387.png",
          "userSlug": "ikaruga"
        },
        "username": "ikaruga"
      },
      "byLeetcode": false,
      "canEdit": false,
      "canEditReward": false,
      "canSee": true,
      "chargeType": "FREE",
      "content": "### 解题思路：\r\n1. 将晴天的日期全部记录到 `set<int> zero` 中\r\n2. 使用 `unordered_map<int, int> water` 来记录每个湖泊上一次下雨的日期\r\n3. 遇到晴天时先不用管抽哪个湖\r\n4. 当下雨时，湖泊已经水满了时，我们可以查询到上次下雨的日期\r\n5. 通过这个日期在晴天记录中查找对应的晴天日期\r\n    51. 在有序数据中查找，用二分啦\r\n6. 如果找到了，就可以使用那一天抽水，找不到就不可避免的洪水了\r\n\r\n### 答题\r\n```C++ []\r\n    vector<int> avoidFlood(vector<int>& rains) {\r\n        vector<int> ans(rains.size(), 1);\r\n        unordered_map<int, int> water;\r\n        set<int> zero;\r\n\r\n        for (int i = 0; i < rains.size(); i++) {\r\n            int r = rains[i];\r\n\r\n            if (r == 0) {\r\n                zero.insert(i);\r\n                continue;\r\n            }\r\n\r\n            if (water.count(r) != 0) {\r\n                auto it = zero.lower_bound(water[r]);\r\n                if (it == zero.end()) return {};\r\n                ans[*it] = r;\r\n                zero.erase(it);\r\n            }\r\n            water[r] = i;\r\n            ans[i] = -1;\r\n        }\r\n\r\n        return ans;\r\n    }    \r\n```\r\n\r\n### 模拟\r\n![图片.png](https://pic.leetcode-cn.com/7ec98ce89d6de94a0dd1253bcc4e6f2b4da92e2179186142719690197bced72a-%E5%9B%BE%E7%89%87.png)\r\n\r\n<![图片.png](https://pic.leetcode-cn.com/835eaf50565b7b563bcf18b755830668db9c41507339de310424c63f0a65ed8e-%E5%9B%BE%E7%89%87.png),![图片.png](https://pic.leetcode-cn.com/ea1962ddd7457c9735f0af8a440ced5e1c958d07e46e92a931bee284014e0aae-%E5%9B%BE%E7%89%87.png),![图片.png](https://pic.leetcode-cn.com/53e1948ae09d95c37ef227210f151f3d0707295ffb7695160a46fec5f943eedf-%E5%9B%BE%E7%89%87.png),![图片.png](https://pic.leetcode-cn.com/63cf46b3df225c1255fc694277f46b1f9d146c0f01d45ab446e2c7b9610138e7-%E5%9B%BE%E7%89%87.png),![图片.png](https://pic.leetcode-cn.com/365fdec787028c3c1df751e81e0d77ab06f9095bdef0c385752a0174fd7e6541-%E5%9B%BE%E7%89%87.png),![图片.png](https://pic.leetcode-cn.com/d0f47fb13af6a822a0a9a9ae795ab75c818d71454d45680a0d92bad502d62c2d-%E5%9B%BE%E7%89%87.png),![图片.png](https://pic.leetcode-cn.com/8aa096807dec3d2d3297fd144467e53ba9a225954dbe37da9726359e2a3418cf-%E5%9B%BE%E7%89%87.png),![图片.png](https://pic.leetcode-cn.com/ae302d9b15105027e4a9778b62b8d8b2bfe1c63baa25963c3e92b0012cc74f7f-%E5%9B%BE%E7%89%87.png),![图片.png](https://pic.leetcode-cn.com/61c8688bdd36844bc15e1db4accf28d735fa867d43799ba9cd9272300c40d769-%E5%9B%BE%E7%89%87.png),![图片.png](https://pic.leetcode-cn.com/14c8fdaa31265b56d3b9f44f2629411a3c5be04e5b7d2df479b2ccd11ab85d4d-%E5%9B%BE%E7%89%87.png)>\r\n\r\n\r\n\r\n### 致谢\r\n\r\n感谢您的观看，希望对您有帮助，欢迎热烈的交流！  \r\n\r\n**如果感觉还不错就点个赞吧~**\r\n",
      "createdAt": "2020-06-21T16:13:30.227907+00:00",
      "hitCount": 9181,
      "identifier": "YxibD1",
      "isEditorsPick": true,
      "isMostPopular": false,
      "isMyFavorite": false,
      "next": {
        "__typename": "BriefSolutionNode",
        "slug": "onbing-cha-ji-bu-dai-ac-84ms-100-by-hqzt-7m8b",
        "title": "O(n)并查集，C++ 84ms 100%"
      },
      "position": 1,
      "prev": null,
      "question": {
        "__typename": "QuestionNode",
        "questionTitleSlug": "avoid-flood-in-the-city"
      },
      "reactionType": null,
      "reactionsV2": [
        {
          "__typename": "ReactionCountNode",
          "count": 62,
          "reactionType": "UPVOTE"
        },
        {
          "__typename": "ReactionCountNode",
          "count": 2,
          "reactionType": "AWESOME"
        },
        {
          "__typename": "ReactionCountNode",
          "count": 1,
          "reactionType": "CONFUSED"
        }
      ],
      "rewardEnabled": null,
      "slug": "avoid-flood-in-the-city-by-ikaruga",
      "status": "PUBLISHED",
      "summary": "解题思路：\n\n将晴天的日期全部记录到 set<int> zero 中\n使用 unordered_map<int, int> water 来记录每个湖泊上一次下雨的日期\n遇到晴天时先不用管抽哪个湖\n当下雨时，湖泊已经水满了时，我们可以查询到上次下雨的日期\n通过这个日期在晴天记录中查找对应的晴天日期\n51. 在有序数据中查",
      "sunk": false,
      "tags": [
        {
          "__typename": "CommonTagNode",
          "name": "C++",
          "nameTranslated": "",
          "slug": "cpp",
          "tagType": "LANGUAGE"
        }
      ],
      "thumbnail": "https://pic.leetcode-cn.com/7ec98ce89d6de94a0dd1253bcc4e6f2b4da92e2179186142719690197bced72a-%E5%9B%BE%E7%89%87.png",
      "title": "【避免洪水泛滥】贪心 + 二分",
      "topic": {
        "__typename": "TopicNode",
        "commentCount": 18,
        "id": 298425,
        "viewCount": 6107
      },
      "uuid": "YxibD1",
      "videosInfo": []
    }
  }
}
