{
  "data": {
    "solutionArticle": {
      "__typename": "SolutionArticleNode",
      "author": {
        "__typename": "UserNode",
        "profile": {
          "__typename": "UserProfileNode",
          "realName": "力扣官方题解",
          "userAvatar": "https://assets.leetcode-cn.com/aliyun-lc-upload/users/leetcode-solution/avatar_1582018938.png",
          "userSlug": "leetcode-solution"
        },
        "username": "LeetCode-Solution"
      },
      "byLeetcode": true,
      "canEdit": false,
      "canEditReward": false,
      "canSee": true,
      "chargeType": "FREE",
      "content": "#### 方法一：双指针\n\n**思路与算法**\n\n根据题意能够分析得到：字符串 $\\textit{typed}$ 的每个字符，有且只有两种「用途」：\n\n- 作为 $\\textit{name}$ 的一部分。此时会「匹配」$\\textit{name}$ 中的一个字符\n\n- 作为长按键入的一部分。此时它应当与前一个字符相同。\n\n如果 $\\textit{typed}$ 中存在一个字符，它两个条件均不满足，则应当直接返回 $\\textit{false}$；否则，当 $\\textit{typed}$ 扫描完毕后，我们再检查 $\\textit{name}$ 的每个字符是否都被「匹配」了。\n\n实现上，我们使用两个下标 $i,j$ 追踪 $\\textit{name}$ 和 $\\textit{typed}$ 的位置。\n\n- 当 $\\textit{name}[i]=\\textit{typed}[j]$ 时，说明两个字符串存在一对匹配的字符，此时将 $i,j$ 都加 $1$。\n\n- 否则，如果 $\\textit{typed}[j]=\\textit{typed}[j-1]$，说明存在一次长按键入，此时只将 $j$ 加 $1$。\n\n最后，如果 $i=\\textit{name}.\\text{length}$，说明  $\\textit{name}$ 的每个字符都被「匹配」了。\n\n**代码**\n\n```C++ [sol1-C++]\nclass Solution {\npublic:\n    bool isLongPressedName(string name, string typed) {\n        int i = 0, j = 0;\n        while (j < typed.length()) {\n            if (i < name.length() && name[i] == typed[j]) {\n                i++;\n                j++;\n            } else if (j > 0 && typed[j] == typed[j - 1]) {\n                j++;\n            } else {\n                return false;\n            }\n        }\n        return i == name.length();\n    }\n};\n```\n\n```Java [sol1-Java]\nclass Solution {\n    public boolean isLongPressedName(String name, String typed) {\n        int i = 0, j = 0;\n        while (j < typed.length()) {\n            if (i < name.length() && name.charAt(i) == typed.charAt(j)) {\n                i++;\n                j++;\n            } else if (j > 0 && typed.charAt(j) == typed.charAt(j - 1)) {\n                j++;\n            } else {\n                return false;\n            }\n        }\n        return i == name.length();\n    }\n}\n```\n\n```C [sol1-C]\nbool isLongPressedName(char* name, char* typed) {\n    int n = strlen(name), m = strlen(typed);\n    int i = 0, j = 0;\n    while (j < m) {\n        if (i < n && name[i] == typed[j]) {\n            i++;\n            j++;\n        } else if (j > 0 && typed[j] == typed[j - 1]) {\n            j++;\n        } else {\n            return false;\n        }\n    }\n    return i == n;\n}\n```\n\n```JavaScript [sol1-JavaScript]\nvar isLongPressedName = function(name, typed) {\n    const n = name.length, m = typed.length;\n    let i = 0, j = 0;\n    while (j < m) {\n        if (i < n && name[i] === typed[j]) {\n            i++;\n            j++;\n        } else if (j > 0 && typed[j] === typed[j - 1]) {\n            j++;\n        } else {\n            return false;\n        }\n    }\n    return i === n;\n};\n```\n\n```Golang [sol1-Golang]\nfunc isLongPressedName(name string, typed string) bool {\n    i, j := 0, 0\n    for j < len(typed) {\n        if i < len(name) && name[i] == typed[j] {\n            i++\n            j++\n        } else if j > 0 && typed[j] == typed[j-1] {\n            j++\n        } else {\n            return false\n        }\n    }\n    return i == len(name)\n}\n```\n\n**复杂度分析**\n\n- 时间复杂度：$O(N+M)$，其中 $M,N$ 分别为两个字符串的长度。\n\n- 空间复杂度：$O(1)$。",
      "createdAt": "2020-10-20T15:12:59.736645+00:00",
      "hitCount": 28868,
      "identifier": "y1pwvg",
      "isEditorsPick": false,
      "isMostPopular": false,
      "isMyFavorite": false,
      "next": {
        "__typename": "BriefSolutionNode",
        "slug": "yi-dao-jian-dan-ti-by-euyvvl-hxta",
        "title": "一道简单题"
      },
      "position": 1,
      "prev": null,
      "question": {
        "__typename": "QuestionNode",
        "questionTitleSlug": "long-pressed-name"
      },
      "reactionType": null,
      "reactionsV2": [
        {
          "__typename": "ReactionCountNode",
          "count": 35,
          "reactionType": "UPVOTE"
        },
        {
          "__typename": "ReactionCountNode",
          "count": 3,
          "reactionType": "CONFUSED"
        },
        {
          "__typename": "ReactionCountNode",
          "count": 2,
          "reactionType": "AWESOME"
        }
      ],
      "rewardEnabled": null,
      "slug": "chang-an-jian-ru-by-leetcode-solution",
      "status": "PUBLISHED",
      "summary": "方法一：双指针 思路与算法 根据题意能够分析得到：字符串 $\\textit{typed}$ 的每个字符，有且只有两种「用途」： 作为 $\\textit{name}$ 的一部分。此时会「匹配」$\\textit{name}$ 中的一个字符 作为长按键入的一部分。此时它应当与前一个字符相同。 如果 $\\textit{type",
      "sunk": false,
      "tags": [
        {
          "__typename": "CommonTagNode",
          "name": "Two Pointers",
          "nameTranslated": "双指针",
          "slug": "two-pointers",
          "tagType": "TOPIC"
        },
        {
          "__typename": "CommonTagNode",
          "name": "String",
          "nameTranslated": "字符串",
          "slug": "string",
          "tagType": "TOPIC"
        },
        {
          "__typename": "CommonTagNode",
          "name": "C",
          "nameTranslated": "",
          "slug": "c",
          "tagType": "LANGUAGE"
        },
        {
          "__typename": "CommonTagNode",
          "name": "C++",
          "nameTranslated": "",
          "slug": "cpp",
          "tagType": "LANGUAGE"
        },
        {
          "__typename": "CommonTagNode",
          "name": "Go",
          "nameTranslated": "",
          "slug": "golang",
          "tagType": "LANGUAGE"
        },
        {
          "__typename": "CommonTagNode",
          "name": "Java",
          "nameTranslated": "",
          "slug": "java",
          "tagType": "LANGUAGE"
        },
        {
          "__typename": "CommonTagNode",
          "name": "JavaScript",
          "nameTranslated": "",
          "slug": "javascript",
          "tagType": "LANGUAGE"
        }
      ],
      "thumbnail": "",
      "title": "长按键入",
      "topic": {
        "__typename": "TopicNode",
        "commentCount": 122,
        "id": 454180,
        "viewCount": 21077
      },
      "uuid": "y1pwvg",
      "videosInfo": []
    }
  }
}
