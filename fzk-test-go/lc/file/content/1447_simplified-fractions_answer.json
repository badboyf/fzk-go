{
  "data": {
    "solutionArticle": {
      "__typename": "SolutionArticleNode",
      "author": {
        "__typename": "UserNode",
        "profile": {
          "__typename": "UserProfileNode",
          "realName": "辜月十二",
          "userAvatar": "https://assets.leetcode-cn.com/aliyun-lc-upload/users/gu-yue-shi-er-9/avatar_1629163280.png",
          "userSlug": "nilu_cn"
        },
        "username": "Nilu_cn"
      },
      "byLeetcode": false,
      "canEdit": false,
      "canEditReward": false,
      "canSee": true,
      "chargeType": "FREE",
      "content": "### 解题思路\n本题思路较简单，暴力搜索即可\n\n![屏幕截图 2021-09-08 171223.png](https://pic.leetcode-cn.com/1631092473-bQiuwb-%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202021-09-08%20171223.png)\n\n\n### 代码\n\n```cpp\nclass Solution {\npublic:\n    vector<string> simplifiedFractions(int n) {\n        if(n==1)\n            return {};\n        vector<string> res;\n        // 辗转相除法求最小公约数\n        function<int(int,int)> gcd = [&](int x,int y)->int{\n            return y%x==0?x:gcd(y%x,x);\n        };\n        auto solve = [&](int x){\n            for(int i=1;i<x;i++){\n                if(gcd(i,x)==1){    // 若最小公约数为1即为最简分数\n                    string t = to_string(i) + \"/\" + to_string(x);\n                    res.emplace_back(t);\n                }\n            }\n        };\n\n        //循环求所有小于等于n的分数\n        for(int i=2;i<=n;i++)\n            solve(i);\n        return res;\n    }\n};\n```",
      "createdAt": "2021-09-08T09:15:03.166542+00:00",
      "hitCount": 138,
      "identifier": "emJZtJ",
      "isEditorsPick": false,
      "isMostPopular": false,
      "isMyFavorite": false,
      "next": {
        "__typename": "BriefSolutionNode",
        "slug": "di-26-chang-shuang-zhou-sai-ti-jie-by-suibianfahui",
        "title": "第 26 场双周赛题解"
      },
      "position": 2,
      "prev": {
        "__typename": "BriefSolutionNode",
        "slug": "javajie-fa-tong-guo-shuang-zhong-xun-hua-o3yt",
        "title": "Java解法：通过双重循环模拟分数，通过gcd判断是否是最简分数"
      },
      "question": {
        "__typename": "QuestionNode",
        "questionTitleSlug": "simplified-fractions"
      },
      "reactionType": null,
      "reactionsV2": [
        {
          "__typename": "ReactionCountNode",
          "count": 2,
          "reactionType": "UPVOTE"
        }
      ],
      "rewardEnabled": null,
      "slug": "c-lambda-by-nilu_cn-srxw",
      "status": "PREPUBLISH",
      "summary": "解题思路\n本题思路较简单，暴力搜索即可\n代码",
      "sunk": false,
      "tags": [
        {
          "__typename": "CommonTagNode",
          "name": "C++",
          "nameTranslated": "",
          "slug": "cpp",
          "tagType": "LANGUAGE"
        },
        {
          "__typename": "CommonTagNode",
          "name": "暴力法",
          "nameTranslated": "",
          "slug": "bao-li-fa",
          "tagType": "ADDITIONAL_TOPIC"
        }
      ],
      "thumbnail": "https://pic.leetcode-cn.com/1631092473-bQiuwb-%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202021-09-08%20171223.png",
      "title": "【C++】【Lambda】",
      "topic": {
        "__typename": "TopicNode",
        "commentCount": 0,
        "id": 986016,
        "viewCount": 119
      },
      "uuid": "emJZtJ",
      "videosInfo": []
    }
  }
}
