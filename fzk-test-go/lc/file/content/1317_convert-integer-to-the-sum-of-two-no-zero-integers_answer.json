{
  "data": {
    "solutionArticle": {
      "__typename": "SolutionArticleNode",
      "author": {
        "__typename": "UserNode",
        "profile": {
          "__typename": "UserProfileNode",
          "realName": "力扣官方题解",
          "userAvatar": "https://assets.leetcode-cn.com/aliyun-lc-upload/users/leetcode-solution/avatar_1582018938.png",
          "userSlug": "leetcode-solution"
        },
        "username": "LeetCode-Solution"
      },
      "byLeetcode": true,
      "canEdit": false,
      "canEditReward": false,
      "canSee": true,
      "chargeType": "FREE",
      "content": "#### 方法一：枚举\n\n由于题目中给出的 `n` 的范围 `[2, 10000]` 较小，因此我们可以直接在 `[1, n)` 的范围内枚举 `A`，并通过 `n - A` 得到 `B`，再判断 `A` 和 `B` 是否均不包含 `0` 即可。\n\n```C++ [sol1-C++]\nclass Solution {\npublic:\n    vector<int> getNoZeroIntegers(int n) {\n        for (int A = 1; A < n; ++A) {\n            int B = n - A;\n            if ((to_string(A) + to_string(B)).find('0') == string::npos) {\n                return {A, B};\n            }\n        }\n        return {};\n    }\n};\n```\n\n```Python [sol1-Python3]\nclass Solution:\n    def getNoZeroIntegers(self, n: int) -> List[int]:\n        for A in range(1, n):\n            B = n - A\n            if '0' not in str(A) + str(B):\n                return [A, B]\n        return []\n```\n\n**复杂度分析**\n\n- 时间复杂度：$O(N\\log N)$，枚举 `A` 的时间复杂度为 $O(N)$，判断 `A` 和 `B` 是否均不包含 `0` 的时间复杂度为 $O(\\log N)$，即 `A` 与 `B` 的位数之和。\n\n- 空间复杂度：$O(1)$。",
      "createdAt": "2020-02-19T03:16:32.688141+00:00",
      "hitCount": 4195,
      "identifier": "lfMqpE",
      "isEditorsPick": false,
      "isMostPopular": false,
      "isMyFavorite": false,
      "next": {
        "__typename": "BriefSolutionNode",
        "slug": "zi-fu-chuan-mo-ni-by-euyvvl-mad3",
        "title": "字符串模拟"
      },
      "position": 1,
      "prev": null,
      "question": {
        "__typename": "QuestionNode",
        "questionTitleSlug": "convert-integer-to-the-sum-of-two-no-zero-integers"
      },
      "reactionType": null,
      "reactionsV2": [
        {
          "__typename": "ReactionCountNode",
          "count": 2,
          "reactionType": "UPVOTE"
        },
        {
          "__typename": "ReactionCountNode",
          "count": 1,
          "reactionType": "AWESOME"
        }
      ],
      "rewardEnabled": null,
      "slug": "jiang-zheng-shu-zhuan-huan-wei-liang-ge-wu-ling-3",
      "status": "PUBLISHED",
      "summary": " 方法一：枚举\n由于题目中给出的 n 的范围 [2, 10000] 较小，因此我们可以直接在 [1, n) 的范围内枚举 A，并通过 n - A 得到 B，再判断 A 和 B 是否均不包含 0 即可。\n复杂度分析\n\n\n时间复杂度：O(N\\log N)，枚举 A 的时间复杂度为 O(N)，判断 A 和 B 是否均不包含 ",
      "sunk": false,
      "tags": [
        {
          "__typename": "CommonTagNode",
          "name": "C++",
          "nameTranslated": "",
          "slug": "cpp",
          "tagType": "LANGUAGE"
        },
        {
          "__typename": "CommonTagNode",
          "name": "Python3",
          "nameTranslated": "",
          "slug": "python3",
          "tagType": "LANGUAGE"
        }
      ],
      "thumbnail": "",
      "title": "将整数转换为两个无零整数的和",
      "topic": {
        "__typename": "TopicNode",
        "commentCount": 21,
        "id": 101774,
        "viewCount": 3796
      },
      "uuid": "lfMqpE",
      "videosInfo": []
    }
  }
}
