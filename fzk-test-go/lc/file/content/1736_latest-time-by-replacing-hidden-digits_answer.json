{
  "data": {
    "solutionArticle": {
      "__typename": "SolutionArticleNode",
      "author": {
        "__typename": "UserNode",
        "profile": {
          "__typename": "UserProfileNode",
          "realName": "力扣官方题解",
          "userAvatar": "https://assets.leetcode-cn.com/aliyun-lc-upload/users/leetcode-solution/avatar_1582018938.png",
          "userSlug": "leetcode-solution"
        },
        "username": "LeetCode-Solution"
      },
      "byLeetcode": true,
      "canEdit": false,
      "canEditReward": false,
      "canSee": true,
      "chargeType": "FREE",
      "content": "#### 方法一：贪心\n\n**思路与算法**\n\n为了得到最晚有效时间，我们可以从高位向低位枚举，在保证时间有效的情况下，使得每一位尽可能取最大值。\n\n因为本题中时间的位数较少，我们依次考虑每一位的规则即可。\n\n- 第一位：若第二位的值已经确定，且值落在区间 $[4,9]$ 中时，第一位的值最大只能为 $1$，否则最大可以为 $2$；\n- 第二位：若第一位的值已经确定，且值为 $2$ 时，第二位的值最大为 $3$，否则为 $9$；\n- 第三位：第三位的值的选取与其它位无关，最大为 $5$；\n- 第四位：第四位的值的选取与其它位无关，最大为 $9$。\n\n**代码**\n\n```C++ [sol1-C++]\nclass Solution {\npublic:\n    string maximumTime(string time) {\n        if (time[0] == '?') {\n            time[0] = ('4' <= time[1] && time[1] <= '9') ? '1' : '2';\n        }\n        if (time[1] == '?') {\n            time[1] = (time[0] == '2') ? '3' : '9';\n        }\n        if (time[3] == '?') {\n            time[3] = '5';\n        }\n        if (time[4] == '?') {\n            time[4] = '9';\n        }\n        return time;\n    }\n};\n```\n\n```Java [sol1-Java]\nclass Solution {\n    public String maximumTime(String time) {\n        char[] arr = time.toCharArray();\n        if (arr[0] == '?') {\n            arr[0] = ('4' <= arr[1] && arr[1] <= '9') ? '1' : '2';\n        }\n        if (arr[1] == '?') {\n            arr[1] = (arr[0] == '2') ? '3' : '9';\n        }\n        if (arr[3] == '?') {\n            arr[3] = '5';\n        }\n        if (arr[4] == '?') {\n            arr[4] = '9';\n        }\n        return new String(arr);\n    }\n}\n```\n\n```C# [sol1-C#]\npublic class Solution {\n    public string MaximumTime(string time) {\n        char[] arr = time.ToCharArray();\n        if (arr[0] == '?') {\n            arr[0] = ('4' <= arr[1] && arr[1] <= '9') ? '1' : '2';\n        }\n        if (arr[1] == '?') {\n            arr[1] = (arr[0] == '2') ? '3' : '9';\n        }\n        if (arr[3] == '?') {\n            arr[3] = '5';\n        }\n        if (arr[4] == '?') {\n            arr[4] = '9';\n        }\n        return new string(arr);\n    }\n}\n```\n\n```go [sol1-Golang]\nfunc maximumTime(time string) string {\n    t := []byte(time)\n    if t[0] == '?' {\n        if '4' <= t[1] && t[1] <= '9' {\n            t[0] = '1'\n        } else {\n            t[0] = '2'\n        }\n    }\n    if t[1] == '?' {\n        if t[0] == '2' {\n            t[1] = '3'\n        } else {\n            t[1] = '9'\n        }\n    }\n    if t[3] == '?' {\n        t[3] = '5'\n    }\n    if t[4] == '?' {\n        t[4] = '9'\n    }\n    return string(t)\n}\n```\n\n```C [sol1-C]\nchar* maximumTime(char* time) {\n    if (time[0] == '?') {\n        time[0] = ('4' <= time[1] && time[1] <= '9') ? '1' : '2';\n    }\n    if (time[1] == '?') {\n        time[1] = (time[0] == '2') ? '3' : '9';\n    }\n    if (time[3] == '?') {\n        time[3] = '5';\n    }\n    if (time[4] == '?') {\n        time[4] = '9';\n    }\n    return time;\n}\n```\n\n```JavaScript [sol1-JavaScript]\nvar maximumTime = function(time) {\n    const arr = Array.from(time);\n    if (arr[0] === '?') {\n        arr[0] = ('4' <= arr[1] && arr[1] <= '9') ? '1' : '2';\n    }\n    if (arr[1] === '?') {\n        arr[1] = (arr[0] == '2') ? '3' : '9';\n    }\n    if (arr[3] === '?') {\n        arr[3] = '5';\n    }\n    if (arr[4] === '?') {\n        arr[4] = '9';\n    }\n    return arr.join('');\n};\n```\n\n**复杂度分析**\n\n- 时间复杂度：$O(1)$。\n\n- 空间复杂度：$O(1)$。",
      "createdAt": "2021-07-23T16:27:27.551484+00:00",
      "hitCount": 14158,
      "identifier": "wukg5N",
      "isEditorsPick": false,
      "isMostPopular": false,
      "isMyFavorite": false,
      "next": {
        "__typename": "BriefSolutionNode",
        "slug": "gong-shui-san-xie-ti-huan-yin-cang-shu-z-2l1h",
        "title": "【宫水三叶】替换隐藏数字得到的最晚时间"
      },
      "position": 1,
      "prev": null,
      "question": {
        "__typename": "QuestionNode",
        "questionTitleSlug": "latest-time-by-replacing-hidden-digits"
      },
      "reactionType": null,
      "reactionsV2": [
        {
          "__typename": "ReactionCountNode",
          "count": 12,
          "reactionType": "UPVOTE"
        },
        {
          "__typename": "ReactionCountNode",
          "count": 1,
          "reactionType": "AWESOME"
        },
        {
          "__typename": "ReactionCountNode",
          "count": 0,
          "reactionType": "CONFUSED"
        }
      ],
      "rewardEnabled": null,
      "slug": "ti-huan-yin-cang-shu-zi-de-dao-de-zui-wa-0s7r",
      "status": "PUBLISHED",
      "summary": "方法一：贪心 思路与算法 为了得到最晚有效时间，我们可以从高位向低位枚举，在保证时间有效的情况下，使得每一位尽可能取最大值。 因为本题中时间的位数较少，我们依次考虑每一位的规则即可。 第一位：若第二位的值已经确定，且值落在区间 $[4,9]$ 中时，第一位的值最大只能为 $1$，否则最大可以为 $2$； 第二位：若第一",
      "sunk": false,
      "tags": [
        {
          "__typename": "CommonTagNode",
          "name": "Greedy",
          "nameTranslated": "贪心",
          "slug": "greedy",
          "tagType": "TOPIC"
        },
        {
          "__typename": "CommonTagNode",
          "name": "String",
          "nameTranslated": "字符串",
          "slug": "string",
          "tagType": "TOPIC"
        },
        {
          "__typename": "CommonTagNode",
          "name": "C",
          "nameTranslated": "",
          "slug": "c",
          "tagType": "LANGUAGE"
        },
        {
          "__typename": "CommonTagNode",
          "name": "C++",
          "nameTranslated": "",
          "slug": "cpp",
          "tagType": "LANGUAGE"
        },
        {
          "__typename": "CommonTagNode",
          "name": "C#",
          "nameTranslated": "",
          "slug": "csharp",
          "tagType": "LANGUAGE"
        },
        {
          "__typename": "CommonTagNode",
          "name": "Go",
          "nameTranslated": "",
          "slug": "golang",
          "tagType": "LANGUAGE"
        },
        {
          "__typename": "CommonTagNode",
          "name": "Java",
          "nameTranslated": "",
          "slug": "java",
          "tagType": "LANGUAGE"
        },
        {
          "__typename": "CommonTagNode",
          "name": "JavaScript",
          "nameTranslated": "",
          "slug": "javascript",
          "tagType": "LANGUAGE"
        },
        {
          "__typename": "CommonTagNode",
          "name": "java",
          "nameTranslated": "",
          "slug": "java-11",
          "tagType": "ADDITIONAL_TOPIC"
        }
      ],
      "thumbnail": "",
      "title": "替换隐藏数字得到的最晚时间",
      "topic": {
        "__typename": "TopicNode",
        "commentCount": 56,
        "id": 893010,
        "viewCount": 11633
      },
      "uuid": "wukg5N",
      "videosInfo": []
    }
  }
}
