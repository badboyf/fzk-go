{
  "data": {
    "solutionArticle": {
      "__typename": "SolutionArticleNode",
      "author": {
        "__typename": "UserNode",
        "profile": {
          "__typename": "UserProfileNode",
          "realName": "Krahets",
          "userAvatar": "https://assets.leetcode-cn.com/aliyun-lc-upload/users/jyd/avatar_1589712294.png",
          "userSlug": "jyd"
        },
        "username": "jyd"
      },
      "byLeetcode": false,
      "canEdit": false,
      "canEditReward": false,
      "canSee": true,
      "chargeType": "FREE",
      "content": "#### 解题思路：\r\n\r\n1. 将 $101112 \\cdots$ 中的每一位称为 **数位** ，记为 $n$ ；\r\n2. 将 $10, 11, 12, \\cdots$  称为 **数字** ，记为 $num$ ；\r\n3. 数字 $10$ 是一个两位数，称此数字的 **位数** 为 $2$ ，记为 $digit$ ；\r\n4. 每 $digit$ 位数的起始数字（即：$1, 10, 100, \\cdots$），记为 $start$ 。\r\n\r\n![Picture1.png](https://pic.leetcode-cn.com/2cd7d8a6a881b697a43f153d6c10e0e991817d78f92b9201b6ab71e44cb619de-Picture1.png){:width=400}\r\n\r\n观察上表，可推出各 $digit$ 下的数位数量 $count$ 的计算公式：\r\n\r\n$$\r\ncount = 9 \\times start \\times digit\r\n$$\r\n\r\n根据以上分析，可将求解分为三步：\r\n\r\n1. 确定 $n$ 所在 **数字** 的 **位数** ，记为 $digit$ ；\r\n2. 确定 $n$ 所在的 **数字** ，记为 $num$ ；\r\n3. 确定 $n$ 是 $num$ 中的哪一数位，并返回结果。\r\n\r\n#####\r\n\r\n##### 1. 确定所求数位的所在数字的位数\r\n\r\n如下图所示，循环执行 $n$ 减去 一位数、两位数、... 的数位数量 $count$ ，直至 $n \\leq count$ 时跳出。\r\n\r\n由于 $n$ 已经减去了一位数、两位数、...、$(digit-1)$ 位数的 **数位数量** $count$ ，因而此时的 $n$ 是从起始数字 $start$ 开始计数的。\r\n\r\n```python\r\ndigit, start, count = 1, 1, 9\r\nwhile n > count:\r\n    n -= count\r\n    start *= 10 # 1, 10, 100, ...\r\n    digit += 1  # 1,  2,  3, ...\r\n    count = 9 * start * digit # 9, 180, 2700, ...\r\n```\r\n\r\n**结论：** 所求数位 ① 在某个 $digit$ 位数中； ② 为从数字 $start$ 开始的第 $n$ 个数位。\r\n\r\n![Picture2.png](https://pic.leetcode-cn.com/16836ca609f8b4d9af776b35eab4a4c4a86d76f4628a1bc931e56d197617bbb4-Picture2.png){:width=400}\r\n\r\n##### 2. 确定所求数位所在的数字\r\n\r\n如下图所示，所求数位 在从数字 $start$ 开始的第 $[(n - 1) / digit]$ 个 **数字** 中（ $start$ 为第 0 个数字）。\r\n\r\n```python\r\nnum = start + (n - 1) // digit\r\n```\r\n\r\n**结论：** 所求数位在数字 $num$ 中。\r\n\r\n![Picture3.png](https://pic.leetcode-cn.com/1f2cefd22a9825eb4a52d606a4aee2f93dd659d1b332d3b6a6ed68e5289e8d01-Picture3.png){:width=400}\r\n\r\n##### 3. 确定所求数位在 $num$ 的哪一数位\r\n\r\n如下图所示，所求数位为数字 $num$ 的第 $(n - 1) \\% digit$ 位（ 数字的首个数位为第 0 位）。\r\n\r\n```python\r\ns = str(num) # 转化为 string\r\nres = int(s[(n - 1) % digit]) # 获得 num 的 第 (n - 1) % digit 个数位，并转化为 int\r\n```\r\n\r\n**结论：** 所求数位是 $res$ 。\r\n\r\n![Picture4.png](https://pic.leetcode-cn.com/09af6bd37d9c79d9b904bedef01f0464aee1cd15e18d8a2ea86b70b312a830c3-Picture4.png){:width=400}\r\n\r\n##### 复杂度分析：\r\n\r\n- **时间复杂度 $O(\\log n)$ ：** 所求数位 $n$ 对应数字 $num$ 的位数 $digit$ 最大为 $O(\\log n)$ ；第一步最多循环 $O(\\log n)$ 次；第三步中将 $num$ 转化为字符串使用 $O(\\log n)$ 时间；因此总体为 $O(\\log n)$ 。 \r\n- **空间复杂度 $O(\\log n)$ ：** 将数字 $num$ 转化为字符串 `str(num)` ，占用 $O(\\log n)$ 的额外空间。\r\n\r\n<![Picture5.png](https://pic.leetcode-cn.com/879d8928277c6b33d2f6aae0b52cbfed9fdeb40692f0d7cc7638018c62f16bc5-Picture5.png),![Picture6.png](https://pic.leetcode-cn.com/7c4d42e686a42fd36b27882fec13ad01b8a9389fe1a1ba94ba41cf68b1dec746-Picture6.png),![Picture7.png](https://pic.leetcode-cn.com/d6a1bf73695b39709260a72d74bcf0e1548d0d3a8e7dd0c239481126235e58ef-Picture7.png)>\r\n\r\n##### 代码：\r\n\r\n```python []\r\nclass Solution:\r\n    def findNthDigit(self, n: int) -> int:\r\n        digit, start, count = 1, 1, 9\r\n        while n > count: # 1.\r\n            n -= count\r\n            start *= 10\r\n            digit += 1\r\n            count = 9 * start * digit\r\n        num = start + (n - 1) // digit # 2.\r\n        return int(str(num)[(n - 1) % digit]) # 3.\r\n```\r\n\r\n```java []\r\nclass Solution {\r\n    public int findNthDigit(int n) {\r\n        int digit = 1;\r\n        long start = 1;\r\n        long count = 9;\r\n        while (n > count) { // 1.\r\n            n -= count;\r\n            digit += 1;\r\n            start *= 10;\r\n            count = digit * start * 9;\r\n        }\r\n        long num = start + (n - 1) / digit; // 2.\r\n        return Long.toString(num).charAt((n - 1) % digit) - '0'; // 3.\r\n    }\r\n}\r\n```",
      "createdAt": "2020-04-25T09:21:43.082727+00:00",
      "hitCount": 101019,
      "identifier": "d57umC",
      "isEditorsPick": true,
      "isMostPopular": true,
      "isMyFavorite": false,
      "next": {
        "__typename": "BriefSolutionNode",
        "slug": "zui-jian-ji-si-lu-5xing-dai-ma-by-fool_d-6dpt",
        "title": "最简洁思路 &  5行代码"
      },
      "position": 1,
      "prev": null,
      "question": {
        "__typename": "QuestionNode",
        "questionTitleSlug": "shu-zi-xu-lie-zhong-mou-yi-wei-de-shu-zi-lcof"
      },
      "reactionType": null,
      "reactionsV2": [
        {
          "__typename": "ReactionCountNode",
          "count": 292,
          "reactionType": "UPVOTE"
        },
        {
          "__typename": "ReactionCountNode",
          "count": 37,
          "reactionType": "AWESOME"
        },
        {
          "__typename": "ReactionCountNode",
          "count": 8,
          "reactionType": "CONFUSED"
        },
        {
          "__typename": "ReactionCountNode",
          "count": 3,
          "reactionType": "THUMBS_DOWN"
        }
      ],
      "rewardEnabled": null,
      "slug": "mian-shi-ti-44-shu-zi-xu-lie-zhong-mou-yi-wei-de-6",
      "status": "PUBLISHED",
      "summary": " 解题思路：\n\n将 101112 \\cdots 中的每一位称为 数位 ，记为 n ；\n将 10, 11, 12, \\cdots  称为 数字 ，记为 num ；\n数字 10 是一个两位数，称此数字的 位数 为 2 ，记为 digit ；\n每 digit 位数的起始数字（即：1, 10, 100, \\cdots），记为 ",
      "sunk": false,
      "tags": [
        {
          "__typename": "CommonTagNode",
          "name": "Math",
          "nameTranslated": "数学",
          "slug": "math",
          "tagType": "TOPIC"
        },
        {
          "__typename": "CommonTagNode",
          "name": "Java",
          "nameTranslated": "",
          "slug": "java",
          "tagType": "LANGUAGE"
        },
        {
          "__typename": "CommonTagNode",
          "name": "Python",
          "nameTranslated": "",
          "slug": "python",
          "tagType": "LANGUAGE"
        },
        {
          "__typename": "CommonTagNode",
          "name": "Python3",
          "nameTranslated": "",
          "slug": "python3",
          "tagType": "LANGUAGE"
        }
      ],
      "thumbnail": "https://pic.leetcode-cn.com/2cd7d8a6a881b697a43f153d6c10e0e991817d78f92b9201b6ab71e44cb619de-Picture1.png",
      "title": "面试题44. 数字序列中某一位的数字（迭代 + 求整 / 求余，清晰图解）",
      "topic": {
        "__typename": "TopicNode",
        "commentCount": 231,
        "id": 219252,
        "viewCount": 64475
      },
      "uuid": "d57umC",
      "videosInfo": []
    }
  }
}
