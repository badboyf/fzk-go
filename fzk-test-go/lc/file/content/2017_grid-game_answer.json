{
  "data": {
    "solutionArticle": {
      "__typename": "SolutionArticleNode",
      "author": {
        "__typename": "UserNode",
        "profile": {
          "__typename": "UserProfileNode",
          "realName": "merickbao",
          "userAvatar": "https://assets.leetcode-cn.com/aliyun-lc-upload/users/merickbao-2/avatar_1618049793.png",
          "userSlug": "merickbao-2"
        },
        "username": "merickbao-2"
      },
      "byLeetcode": false,
      "canEdit": false,
      "canEditReward": false,
      "canSee": true,
      "chargeType": "FREE",
      "content": "### 解题思路\n![截屏2021-09-26 12.17.14.png](https://pic.leetcode-cn.com/1632629837-wxsbtX-%E6%88%AA%E5%B1%8F2021-09-26%2012.17.14.png)\n如图所示，假设第一个机器人走红色的线路，那么第二个机器人最多只能拿到最多第一行蓝线的和或者第二行蓝线的和。\n所以第一个机器人的任务就是使两条蓝线和的最大值最小。\n可以使用前缀和来快速计算蓝线的和，枚举即可。\n时间复杂度：$O(N)$\n\n### 代码\n\n```java\nclass Solution {\n    public long gridGame(int[][] grid) {\n        int n = grid[0].length;\n        long[][] p = new long[2][n + 1];\n        for(int i = 1; i <= n; i++) {\n            p[0][i] = p[0][i - 1] + grid[0][i - 1];\n            p[1][i] = p[1][i - 1] + grid[1][i - 1];\n        }\n        long ans = Long.MAX_VALUE;\n        for(int i = 1; i <= n; i++) {\n            ans = Math.min(ans, Math.max(p[0][n] - p[0][i], p[1][i - 1]));\n        }\n        return ans;\n    }\n}\n```",
      "createdAt": "2021-09-26T04:21:52.420343+00:00",
      "hitCount": 2228,
      "identifier": "vPNELt",
      "isEditorsPick": false,
      "isMostPopular": false,
      "isMyFavorite": false,
      "next": {
        "__typename": "BriefSolutionNode",
        "slug": "qian-zhui-he-si-lu-javascript-by-lzxjack-lxl2",
        "title": "【前缀和思路】JavaScript"
      },
      "position": 1,
      "prev": null,
      "question": {
        "__typename": "QuestionNode",
        "questionTitleSlug": "grid-game"
      },
      "reactionType": null,
      "reactionsV2": [
        {
          "__typename": "ReactionCountNode",
          "count": 28,
          "reactionType": "UPVOTE"
        },
        {
          "__typename": "ReactionCountNode",
          "count": 2,
          "reactionType": "AWESOME"
        },
        {
          "__typename": "ReactionCountNode",
          "count": 0,
          "reactionType": "CONFUSED"
        }
      ],
      "rewardEnabled": null,
      "slug": "javaqian-zhui-he-by-merickbao-2-nq78",
      "status": "PREPUBLISH",
      "summary": "解题思路\n\n如图所示，假设第一个机器人走红色的线路，那么第二个机器人最多只能拿到最多第一行蓝线的和或者第二行蓝线的和。\n所以第一个机器人的任务就是使两条蓝线和的最大值最小。\n可以使用前缀和来快速计算蓝线的和，枚举即可。\n时间复杂度：O(N)\n代码",
      "sunk": false,
      "tags": [
        {
          "__typename": "CommonTagNode",
          "name": "Prefix Sum",
          "nameTranslated": "前缀和",
          "slug": "prefix-sum",
          "tagType": "TOPIC"
        },
        {
          "__typename": "CommonTagNode",
          "name": "Java",
          "nameTranslated": "",
          "slug": "java",
          "tagType": "LANGUAGE"
        }
      ],
      "thumbnail": "https://pic.leetcode-cn.com/1632629837-wxsbtX-%E6%88%AA%E5%B1%8F2021-09-26%2012.17.14.png",
      "title": "Java前缀和",
      "topic": {
        "__typename": "TopicNode",
        "commentCount": 14,
        "id": 1018296,
        "viewCount": 1406
      },
      "uuid": "vPNELt",
      "videosInfo": []
    }
  }
}
