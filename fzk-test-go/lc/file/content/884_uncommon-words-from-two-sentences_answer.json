{
  "data": {
    "solutionArticle": {
      "__typename": "SolutionArticleNode",
      "author": {
        "__typename": "UserNode",
        "profile": {
          "__typename": "UserProfileNode",
          "realName": "力扣 (LeetCode)",
          "userAvatar": "https://assets.leetcode-cn.com/aliyun-lc-upload/uploaded_files/2021/03/73c9f099-abbe-4d94-853f-f8abffd459cd/leetcode.png",
          "userSlug": "leetcode"
        },
        "username": "LeetCode"
      },
      "byLeetcode": true,
      "canEdit": false,
      "canEditReward": false,
      "canSee": true,
      "chargeType": "FREE",
      "content": "#### 方法：计数\n\n**思路和算法**\n\n每个不常见的单词总共只出现一次。我们可以统计每个单词的出现次数，然后返回恰好出现一次的单词。\n\n```java [xehjDBgG-Java]\nclass Solution {\n    public String[] uncommonFromSentences(String A, String B) {\n        Map<String, Integer> count = new HashMap();\n        for (String word: A.split(\" \"))\n            count.put(word, count.getOrDefault(word, 0) + 1);\n        for (String word: B.split(\" \"))\n            count.put(word, count.getOrDefault(word, 0) + 1);\n\n        List<String> ans = new LinkedList();\n        for (String word: count.keySet())\n            if (count.get(word) == 1)\n                ans.add(word);\n\n        return ans.toArray(new String[ans.size()]);\n    }\n}\n```\n```python [xehjDBgG-Python]\nclass Solution(object):\n    def uncommonFromSentences(self, A, B):\n        count = {}\n        for word in A.split():\n            count[word] = count.get(word, 0) + 1\n        for word in B.split():\n            count[word] = count.get(word, 0) + 1\n\n        #Alternatively:\n        #count = collections.Counter(A.split())\n        #count += collections.Counter(B.split())\n\n        return [word for word in count if count[word] == 1]\n```\n\n\n**复杂度分析**\n\n* 时间复杂度：$O(M + N)$，其中 $M, N$ 分别是 `A` 和 `B` 的长度。\n\n* 空间复杂度：$O(M + N)$，`count` 所用去的空间。",
      "createdAt": "2018-08-21T18:23:31.852049+00:00",
      "hitCount": 12295,
      "identifier": "hZDvlo",
      "isEditorsPick": false,
      "isMostPopular": false,
      "isMyFavorite": false,
      "next": {
        "__typename": "BriefSolutionNode",
        "slug": "ha-xi-biao-by-euyvvl-zukc",
        "title": "哈希表"
      },
      "position": 1,
      "prev": null,
      "question": {
        "__typename": "QuestionNode",
        "questionTitleSlug": "uncommon-words-from-two-sentences"
      },
      "reactionType": null,
      "reactionsV2": [
        {
          "__typename": "ReactionCountNode",
          "count": 4,
          "reactionType": "UPVOTE"
        }
      ],
      "rewardEnabled": null,
      "slug": "liang-ju-hua-zhong-de-bu-chang-jian-dan-ci-by-leet",
      "status": "PUBLISHED",
      "summary": "思路和算法\n每个不常见的单词总共只出现一次。我们可以统计每个单词的出现次数，然后返回恰好出现一次的单词。\n复杂度分析",
      "sunk": false,
      "tags": [
        {
          "__typename": "CommonTagNode",
          "name": "Hash Table",
          "nameTranslated": "哈希表",
          "slug": "hash-table",
          "tagType": "TOPIC"
        },
        {
          "__typename": "CommonTagNode",
          "name": "Python",
          "nameTranslated": "",
          "slug": "python",
          "tagType": "LANGUAGE"
        }
      ],
      "thumbnail": "",
      "title": "两句话中的不常见单词",
      "topic": {
        "__typename": "TopicNode",
        "commentCount": 20,
        "id": 3545,
        "viewCount": 6637
      },
      "uuid": "hZDvlo",
      "videosInfo": []
    }
  }
}
