{
  "data": {
    "solutionArticle": {
      "__typename": "SolutionArticleNode",
      "author": {
        "__typename": "UserNode",
        "profile": {
          "__typename": "UserProfileNode",
          "realName": "A1m233",
          "userAvatar": "https://assets.leetcode-cn.com/aliyun-lc-upload/users/bruh-d/avatar_1632058944.png",
          "userSlug": "a1m233"
        },
        "username": "A1m233"
      },
      "byLeetcode": false,
      "canEdit": false,
      "canEditReward": false,
      "canSee": true,
      "chargeType": "FREE",
      "content": "### 解题思路\n\n![1.png](https://pic.leetcode-cn.com/1637766342-HTCUbA-1.png)\n\n这里只是对老汤刷题课程的代码做了很简单的优化。\n大致思路：由于1<=nums[i]<=n(数组长度)，所以（nums[i]-1）可以成为nums中的下标，记index=nums[i]-1又因为1<=nums[i]<=n，\n所以可以通过nums[i]每出现过一次之后对nums[index]+=n,确保当nums[index]>2*n时，index+1(即nums[i])出现过两次。\n小细节：这里通过对index取模来保证其仍在下标范围内。\n\n### 代码\n\n```cpp\nclass Solution {\npublic:\n    vector<int> findDuplicates(vector<int>& nums) \n    {\n        vector<int> res;\n        int n=nums.size();\n        for(int i=0;i<nums.size();i++)\n        {\n            int index=(nums[i]-1)%n;\n            nums[index]+=n;\n            if(nums[index]>2*n)res.push_back(index+1);\n        }\n        return res;\n    }\n};\n```",
      "createdAt": "2021-11-24T15:00:09.263977+00:00",
      "hitCount": 69,
      "identifier": "2XapSQ",
      "isEditorsPick": false,
      "isMostPopular": false,
      "isMyFavorite": false,
      "next": {
        "__typename": "BriefSolutionNode",
        "slug": "shu-zu-zhong-zhong-fu-de-shu-jian-dan-bi-utnm",
        "title": "[数组中重复的数]  简单标记:O(1)空间复杂度  Python "
      },
      "position": 1,
      "prev": null,
      "question": {
        "__typename": "QuestionNode",
        "questionTitleSlug": "find-all-duplicates-in-an-array"
      },
      "reactionType": null,
      "reactionsV2": [
        {
          "__typename": "ReactionCountNode",
          "count": 1,
          "reactionType": "UPVOTE"
        }
      ],
      "rewardEnabled": null,
      "slug": "jian-dan-you-hua-lao-tang-shua-ti-ke-che-l7i8",
      "status": "PUBLISHED",
      "summary": "解题思路\n这里只是对老汤刷题课程的代码做了很简单的优化。\n大致思路：由于1<=nums[i]<=n(数组长度)，所以（nums[i]-1）可以成为nums中的下标，记index=nums[i]-1又因为1<=nums[i]<=n，\n所以可以通过nums[i]每出现过一次之后对nums[index]+=n,确保当nums",
      "sunk": false,
      "tags": [
        {
          "__typename": "CommonTagNode",
          "name": "C++",
          "nameTranslated": "",
          "slug": "cpp",
          "tagType": "LANGUAGE"
        }
      ],
      "thumbnail": "",
      "title": "简单优化老汤刷题课程代码",
      "topic": {
        "__typename": "TopicNode",
        "commentCount": 0,
        "id": 1120644,
        "viewCount": 57
      },
      "uuid": "2XapSQ",
      "videosInfo": []
    }
  }
}
